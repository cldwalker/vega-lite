digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/normal-2d.json</i>>;
    tooltip = "[43]&#010;data/normal-2d.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <QuantileTransform<br/><font color="grey" point-size="10">IN:</font> u<br/><font color="grey" point-size="10">OUT:</font> p, v>;
    tooltip = "[45]&#010;QuantileTransform {as:[p,v],quantile:u,step:0.01}"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> p<br/><font color="grey" point-size="10">OUT:</font> unif>;
    tooltip = "[46]&#010;Calculate {as:unif,calculate:quantileUniform(datum.p)}"
  ]
  "47" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> p<br/><font color="grey" point-size="10">OUT:</font> norm>;
    tooltip = "[47]&#010;Calculate {as:norm,calculate:quantileNormal(datum.p)}"
  ]
  "48" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[52]&#010;Identifier"
  ]
  "53" [
    label = <Output<br/><i>concat_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> unif, v>;
    tooltip = "[55]&#010;FilterInvalid {unif:{field:unif,type:quantitative},v:{field:v,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>concat_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[58]&#010;Identifier"
  ]
  "59" [
    label = <Output<br/><i>concat_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> norm, v>;
    tooltip = "[61]&#010;FilterInvalid {norm:{field:norm,type:quantitative},v:{field:v,type:quantitative}}"
  ]
  "62" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[62]&#010;Output 63"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "50" "50" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "50" -> "58" "58" -> "59" "59" -> "61" "61" -> "62"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/normal-2d.json</i>>;
    tooltip = "[43]&#010;data/normal-2d.json"
  ]
  "45" [
    label = <QuantileTransform<br/><font color="grey" point-size="10">IN:</font> u<br/><font color="grey" point-size="10">OUT:</font> p, v>;
    tooltip = "[45]&#010;QuantileTransform {as:[p,v],quantile:u,step:0.01}"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> p<br/><font color="grey" point-size="10">OUT:</font> unif>;
    tooltip = "[46]&#010;Calculate {as:unif,calculate:quantileUniform(datum.p)}"
  ]
  "47" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> p<br/><font color="grey" point-size="10">OUT:</font> norm>;
    tooltip = "[47]&#010;Calculate {as:norm,calculate:quantileNormal(datum.p)}"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> unif, v>;
    tooltip = "[55]&#010;FilterInvalid {unif:{field:unif,type:quantitative},v:{field:v,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>concat_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "61" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> norm, v>;
    tooltip = "[61]&#010;FilterInvalid {norm:{field:norm,type:quantitative},v:{field:v,type:quantitative}}"
  ]
  "62" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[62]&#010;Output 63"
  ]

  "43" -> "45" "45" -> "46" "46" -> "47" "47" -> "55" "55" -> "56" "47" -> "61" "61" -> "62"
}
{ data: 'concat_0_main', field: 'unif' }
{ data: 'concat_0_main', field: 'v' }
{ data: 'concat_1_main', field: 'norm' }
{ data: 'concat_1_main', field: 'v' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "height": 200,
  "data": [
    {
      "name": "source_0",
      "url": "data/normal-2d.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "quantile", "field": "u", "step": 0.01, "as": ["p", "v"]},
        {"type": "formula", "expr": "quantileUniform(datum.p)", "as": "unif"},
        {"type": "formula", "expr": "quantileNormal(datum.p)", "as": "norm"}
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"unif\"]) && isFinite(+datum[\"unif\"]) && isValid(datum[\"v\"]) && isFinite(+datum[\"v\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"norm\"]) && isFinite(+datum[\"norm\"]) && isValid(datum[\"v\"]) && isFinite(+datum[\"v\"])"
        }
      ]
    }
  ],
  "signals": [{"name": "childWidth", "value": 200}],
  "layout": {"padding": 20, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_marks",
          "type": "symbol",
          "style": ["point"],
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": {"value": "#4c78a8"},
              "x": {"scale": "concat_0_x", "field": "unif"},
              "y": {"scale": "concat_0_y", "field": "v"}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "gridScale": "concat_0_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "gridScale": "concat_0_x",
          "grid": true,
          "tickCount": {"signal": "ceil(height/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "title": "unif",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "grid": false,
          "title": "v",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_1_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "height"}
        }
      },
      "marks": [
        {
          "name": "concat_1_marks",
          "type": "symbol",
          "style": ["point"],
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": {"value": "#4c78a8"},
              "x": {"scale": "concat_1_x", "field": "norm"},
              "y": {"scale": "concat_1_y", "field": "v"}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "gridScale": "concat_1_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_1_y",
          "orient": "left",
          "gridScale": "concat_1_x",
          "grid": true,
          "tickCount": {"signal": "ceil(height/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "grid": false,
          "title": "norm",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "concat_1_y",
          "orient": "left",
          "grid": false,
          "title": "v",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(height/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "concat_0_x",
      "type": "linear",
      "domain": {"data": "data_0", "field": "unif"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_0_y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "v"},
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_1_x",
      "type": "linear",
      "domain": {"data": "data_1", "field": "norm"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_1_y",
      "type": "linear",
      "domain": {"data": "data_1", "field": "v"},
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    }
  ]
}
