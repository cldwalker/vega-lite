digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Cylinders, *<br/><font color="grey" point-size="10">OUT:</font> num_cars>;
    tooltip = "[45]&#010;Aggregate {dimensions:Set(\Origin\,\Cylinders\),measures:{*:{count:Set(\num_cars\)}}}"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> num_cars>;
    tooltip = "[53]&#010;FilterInvalid {num_cars:{field:num_cars,legend:{direction:horizontal,gradientLength:120},title:Count of Records,type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "56" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[56]&#010;Identifier"
  ]
  "57" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[57]&#010;Output 58"
  ]
  "59" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[59]&#010;Output 60"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "50" "50" -> "51" "51" -> "53" "53" -> "54" "48" -> "56" "56" -> "57" "57" -> "59"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "45" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Cylinders, *<br/><font color="grey" point-size="10">OUT:</font> num_cars>;
    tooltip = "[45]&#010;Aggregate {dimensions:Set(\Origin\,\Cylinders\),measures:{*:{count:Set(\num_cars\)}}}"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> num_cars>;
    tooltip = "[53]&#010;FilterInvalid {num_cars:{field:num_cars,legend:{direction:horizontal,gradientLength:120},title:Count of Records,type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "59" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[59]&#010;Output 60"
  ]

  "43" -> "45" "45" -> "59" "59" -> "53" "53" -> "54"
}
{ data: 'layer_0_main', field: 'Cylinders', sort: true }
{ data: 'layer_1_main', field: 'Cylinders', sort: true }
{ data: 'layer_0_main', field: 'Origin', sort: true }
{ data: 'layer_1_main', field: 'Origin', sort: true }
{ data: 'layer_0_main', field: 'num_cars' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/cars.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["Origin", "Cylinders"],
          "ops": ["count"],
          "fields": [null],
          "as": ["num_cars"]
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"num_cars\"]) && isFinite(+datum[\"num_cars\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "x_step", "value": 20},
    {"name": "width", "update": "bandspace(domain('x').length, 0, 0) * x_step"},
    {"name": "y_step", "value": 20},
    {"name": "height", "update": "bandspace(domain('y').length, 0, 0) * y_step"}
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "rect",
      "style": ["rect"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "num_cars"},
          "x": {"scale": "x", "field": "Cylinders"},
          "width": {"scale": "x", "band": 1},
          "y": {"scale": "y", "field": "Origin"},
          "height": {"scale": "y", "band": 1}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "text",
      "style": ["text"],
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "fill": [
            {"test": "datum['num_cars'] < 40", "value": "black"},
            {"value": "white"}
          ],
          "x": {"scale": "x", "field": "Cylinders", "band": 0.5},
          "y": {"scale": "y", "field": "Origin", "band": 0.5},
          "text": {"signal": "format(datum[\"num_cars\"], \"\")"},
          "align": {"value": "center"},
          "baseline": {"value": "middle"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "band",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Cylinders"},
          {"data": "source_0", "field": "Cylinders"}
        ],
        "sort": true
      },
      "range": {"step": {"signal": "x_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "y",
      "type": "band",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Origin"},
          {"data": "source_0", "field": "Origin"}
        ],
        "sort": true
      },
      "range": {"step": {"signal": "y_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "data_0", "field": "num_cars"},
      "range": "heatmap",
      "interpolate": "hcl",
      "zero": false
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 1
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 1
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "Cylinders",
      "labelAlign": "right",
      "labelAngle": 270,
      "labelBaseline": "middle",
      "labelOverlap": true,
      "zindex": 1
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Origin",
      "labelOverlap": true,
      "zindex": 1
    }
  ],
  "legends": [
    {
      "direction": "horizontal",
      "gradientLength": 120,
      "title": "Count of Records",
      "fill": "color",
      "symbolType": "square"
    }
  ],
  "config": {"axis": {"grid": true, "tickBand": "extent"}}
}
