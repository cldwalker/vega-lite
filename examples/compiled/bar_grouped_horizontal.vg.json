digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "47" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> age>;
    tooltip = "[51]&#010;Facet r:{fields:[age],name:row_domain}"
  ]
  "52" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[52]&#010;Identifier"
  ]
  "53" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[55]&#010;Aggregate {dimensions:Set(\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "56" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[56]&#010;FilterInvalid {people:{aggregate:sum,axis:{grid:false,title:population},field:people,type:quantitative}}"
  ]
  "57" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[57]&#010;Output 58"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "49" "49" -> "51" "51" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "56" -> "57"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> age>;
    tooltip = "[51]&#010;Facet r:{fields:[age],name:row_domain}"
  ]
  "55" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> gender, age, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[55]&#010;Aggregate {dimensions:Set(\gender\,\age\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "56" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[56]&#010;FilterInvalid {people:{aggregate:sum,axis:{grid:false,title:population},field:people,type:quantitative}}"
  ]
  "57" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[57]&#010;Output 58"
  ]
  "60" [
    label = <Output<br/><i>clone_child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[60]&#010;Output 59"
  ]

  "43" -> "45" "45" -> "46" "46" -> "55" "55" -> "56" "56" -> "49" "49" -> "60" "60" -> "51" "51" -> "57"
}
{ data: 'scale_child_main', field: 'sum_people' }
{ data: 'scale_child_main', field: 'gender', sort: true }
{ data: 'scale_child_main', field: 'gender', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "url": "data/population.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "filter", "expr": "datum.year == 2000"},
        {
          "type": "formula",
          "expr": "datum.sex == 2 ? 'Female' : 'Male'",
          "as": "gender"
        },
        {
          "type": "aggregate",
          "groupby": ["gender", "age"],
          "ops": ["sum"],
          "fields": ["people"],
          "as": ["sum_people"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
        }
      ]
    },
    {
      "name": "row_domain",
      "source": "source_0",
      "transform": [{"type": "aggregate", "groupby": ["age"]}]
    }
  ],
  "signals": [
    {"name": "child_width", "value": 200},
    {"name": "y_step", "value": 6},
    {
      "name": "child_height",
      "update": "bandspace(domain('y').length, 0.1, 0.05) * y_step"
    }
  ],
  "layout": {
    "padding": {"row": 10, "column": 20},
    "offset": {"rowTitle": 10},
    "columns": 1,
    "bounds": "full",
    "align": "all"
  },
  "marks": [
    {
      "name": "row-title",
      "type": "group",
      "role": "row-title",
      "title": {
        "text": "age",
        "orient": "left",
        "style": "guide-title",
        "offset": 10
      }
    },
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "from": {"data": "row_domain"},
      "sort": {"field": "datum[\"age\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "isValid(parent[\"age\"]) ? parent[\"age\"] : \"\"+parent[\"age\"]"
        },
        "orient": "left",
        "style": "guide-label",
        "frame": "group",
        "offset": 10
      },
      "encode": {"update": {"height": {"signal": "child_height"}}}
    },
    {
      "name": "column_footer",
      "type": "group",
      "role": "column-footer",
      "encode": {"update": {"width": {"signal": "child_width"}}},
      "axes": [
        {
          "scale": "x",
          "orient": "bottom",
          "grid": false,
          "title": "population",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {"name": "facet", "data": "source_0", "groupby": ["age"]}
      },
      "sort": {"field": ["datum[\"age\"]"], "order": ["ascending"]},
      "encode": {
        "update": {
          "width": {"signal": "child_width"},
          "height": {"signal": "child_height"}
        }
      },
      "marks": [
        {
          "name": "child_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "fill": {"scale": "color", "field": "gender"},
              "x": {"scale": "x", "field": "sum_people"},
              "x2": {"scale": "x", "value": 0},
              "y": {"scale": "y", "field": "gender"},
              "height": {"scale": "y", "band": 1}
            }
          }
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {"data": "source_0", "field": "sum_people"},
      "range": [0, {"signal": "child_width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "y",
      "type": "band",
      "domain": {"data": "source_0", "field": "gender", "sort": true},
      "range": {"step": {"signal": "y_step"}},
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "source_0", "field": "gender", "sort": true},
      "range": ["#675193", "#ca8861"]
    }
  ],
  "legends": [{"fill": "color", "symbolType": "square", "title": "gender"}],
  "config": {
    "style": {"cell": {"stroke": "transparent"}},
    "axis": {"domainWidth": 1}
  }
}
