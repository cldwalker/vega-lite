digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> title>;
    tooltip = "[49]&#010;Facet r:{fields:[title],name:row_domain}"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[55]&#010;Identifier"
  ]
  "56" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> ranges[2]<br/><font color="grey" point-size="10">OUT:</font> ranges[2]>;
    tooltip = "[56]&#010;Parse {ranges[2]:flatten}"
  ]
  "57" [
    label = <Output<br/><i>child_layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[57]&#010;Output 58"
  ]
  "59" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[2]>;
    tooltip = "[59]&#010;FilterInvalid {ranges[2]:{field:ranges[2],scale:{nice:false},title:null,type:quantitative}}"
  ]
  "60" [
    label = <Output<br/><i>child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[60]&#010;Output 61"
  ]
  "62" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[62]&#010;Identifier"
  ]
  "63" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> ranges[1]<br/><font color="grey" point-size="10">OUT:</font> ranges[1]>;
    tooltip = "[63]&#010;Parse {ranges[1]:flatten}"
  ]
  "64" [
    label = <Output<br/><i>child_layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[64]&#010;Output 65"
  ]
  "66" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[1]>;
    tooltip = "[66]&#010;FilterInvalid {ranges[1]:{field:ranges[1],type:quantitative}}"
  ]
  "67" [
    label = <Output<br/><i>child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "69" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[69]&#010;Identifier"
  ]
  "70" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> ranges[0]<br/><font color="grey" point-size="10">OUT:</font> ranges[0]>;
    tooltip = "[70]&#010;Parse {ranges[0]:flatten}"
  ]
  "71" [
    label = <Output<br/><i>child_layer_2_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[71]&#010;Output 72"
  ]
  "73" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[0]>;
    tooltip = "[73]&#010;FilterInvalid {ranges[0]:{field:ranges[0],type:quantitative}}"
  ]
  "74" [
    label = <Output<br/><i>child_layer_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[74]&#010;Output 75"
  ]
  "76" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[76]&#010;Identifier"
  ]
  "77" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> measures[1]<br/><font color="grey" point-size="10">OUT:</font> measures[1]>;
    tooltip = "[77]&#010;Parse {measures[1]:flatten}"
  ]
  "78" [
    label = <Output<br/><i>child_layer_3_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[78]&#010;Output 79"
  ]
  "80" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[1]>;
    tooltip = "[80]&#010;FilterInvalid {measures[1]:{field:measures[1],type:quantitative}}"
  ]
  "81" [
    label = <Output<br/><i>child_layer_3_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[81]&#010;Output 82"
  ]
  "83" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[83]&#010;Identifier"
  ]
  "84" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> measures[0]<br/><font color="grey" point-size="10">OUT:</font> measures[0]>;
    tooltip = "[84]&#010;Parse {measures[0]:flatten}"
  ]
  "85" [
    label = <Output<br/><i>child_layer_4_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[85]&#010;Output 86"
  ]
  "87" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[0]>;
    tooltip = "[87]&#010;FilterInvalid {measures[0]:{field:measures[0],type:quantitative}}"
  ]
  "88" [
    label = <Output<br/><i>child_layer_4_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[88]&#010;Output 89"
  ]
  "90" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[90]&#010;Identifier"
  ]
  "91" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> markers[0]<br/><font color="grey" point-size="10">OUT:</font> markers[0]>;
    tooltip = "[91]&#010;Parse {markers[0]:flatten}"
  ]
  "92" [
    label = <Output<br/><i>child_layer_5_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[92]&#010;Output 93"
  ]
  "94" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> markers[0]>;
    tooltip = "[94]&#010;FilterInvalid {markers[0]:{field:markers[0],type:quantitative}}"
  ]
  "95" [
    label = <Output<br/><i>child_layer_5_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[95]&#010;Output 96"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "51" "51" -> "53" "53" -> "55" "55" -> "56" "56" -> "57" "57" -> "59" "59" -> "60" "53" -> "62" "62" -> "63" "63" -> "64" "64" -> "66" "66" -> "67" "53" -> "69" "69" -> "70" "70" -> "71" "71" -> "73" "73" -> "74" "53" -> "76" "76" -> "77" "77" -> "78" "78" -> "80" "80" -> "81" "53" -> "83" "83" -> "84" "84" -> "85" "85" -> "87" "87" -> "88" "53" -> "90" "90" -> "91" "91" -> "92" "92" -> "94" "94" -> "95"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> title>;
    tooltip = "[49]&#010;Facet r:{fields:[title],name:row_domain}"
  ]
  "59" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[2]>;
    tooltip = "[59]&#010;FilterInvalid {ranges[2]:{field:ranges[2],scale:{nice:false},title:null,type:quantitative}}"
  ]
  "60" [
    label = <Output<br/><i>child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[60]&#010;Output 61"
  ]
  "66" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[1]>;
    tooltip = "[66]&#010;FilterInvalid {ranges[1]:{field:ranges[1],type:quantitative}}"
  ]
  "67" [
    label = <Output<br/><i>child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "73" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[0]>;
    tooltip = "[73]&#010;FilterInvalid {ranges[0]:{field:ranges[0],type:quantitative}}"
  ]
  "74" [
    label = <Output<br/><i>child_layer_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[74]&#010;Output 75"
  ]
  "80" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[1]>;
    tooltip = "[80]&#010;FilterInvalid {measures[1]:{field:measures[1],type:quantitative}}"
  ]
  "81" [
    label = <Output<br/><i>child_layer_3_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[81]&#010;Output 82"
  ]
  "87" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[0]>;
    tooltip = "[87]&#010;FilterInvalid {measures[0]:{field:measures[0],type:quantitative}}"
  ]
  "88" [
    label = <Output<br/><i>child_layer_4_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[88]&#010;Output 89"
  ]
  "94" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> markers[0]>;
    tooltip = "[94]&#010;FilterInvalid {markers[0]:{field:markers[0],type:quantitative}}"
  ]
  "95" [
    label = <Output<br/><i>child_layer_5_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[95]&#010;Output 96"
  ]
  "103" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> ranges[2], ranges[1], ranges[0], measures[1], measures[0], markers[0]<br/><font color="grey" point-size="10">OUT:</font> ranges[2], ranges[1], ranges[0], measures[1], measures[0], markers[0]>;
    tooltip = "[103]&#010;Parse {markers[0]:flatten,measures[0]:flatten,measures[1]:flatten,ranges[0]:flatten,ranges[1]:flatten,ranges[2]:flatten}"
  ]
  "104" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[2]>;
    tooltip = "[104]&#010;FilterInvalid {ranges[2]:{field:ranges[2],scale:{nice:false},title:null,type:quantitative}}"
  ]
  "105" [
    label = <Output<br/><i>clone_child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[105]&#010;Output 97"
  ]
  "106" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[1]>;
    tooltip = "[106]&#010;FilterInvalid {ranges[1]:{field:ranges[1],type:quantitative}}"
  ]
  "107" [
    label = <Output<br/><i>clone_child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[107]&#010;Output 98"
  ]
  "108" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> ranges[0]>;
    tooltip = "[108]&#010;FilterInvalid {ranges[0]:{field:ranges[0],type:quantitative}}"
  ]
  "109" [
    label = <Output<br/><i>clone_child_layer_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[109]&#010;Output 99"
  ]
  "110" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[1]>;
    tooltip = "[110]&#010;FilterInvalid {measures[1]:{field:measures[1],type:quantitative}}"
  ]
  "111" [
    label = <Output<br/><i>clone_child_layer_3_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[111]&#010;Output 100"
  ]
  "112" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> measures[0]>;
    tooltip = "[112]&#010;FilterInvalid {measures[0]:{field:measures[0],type:quantitative}}"
  ]
  "113" [
    label = <Output<br/><i>clone_child_layer_4_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[113]&#010;Output 101"
  ]
  "114" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> markers[0]>;
    tooltip = "[114]&#010;FilterInvalid {markers[0]:{field:markers[0],type:quantitative}}"
  ]
  "115" [
    label = <Output<br/><i>clone_child_layer_5_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[115]&#010;Output 102"
  ]

  "43" -> "103" "103" -> "47" "47" -> "49" "49" -> "59" "59" -> "60" "49" -> "66" "66" -> "67" "49" -> "73" "73" -> "74" "49" -> "80" "80" -> "81" "49" -> "87" "87" -> "88" "49" -> "94" "94" -> "95" "47" -> "104" "104" -> "105" "47" -> "106" "106" -> "107" "47" -> "108" "108" -> "109" "47" -> "110" "110" -> "111" "47" -> "112" "112" -> "113" "47" -> "114" "114" -> "115"
}
{ data: 'child_layer_0_main', field: 'ranges\\.2' }
{ data: 'child_layer_1_main', field: 'ranges\\.1' }
{ data: 'child_layer_2_main', field: 'ranges\\.0' }
{ data: 'child_layer_3_main', field: 'measures\\.1' }
{ data: 'child_layer_4_main', field: 'measures\\.0' }
{ data: 'child_layer_5_main', field: 'markers\\.0' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "values": [
        {
          "title": "Revenue",
          "subtitle": "US$, in thousands",
          "ranges": [150, 225, 300],
          "measures": [220, 270],
          "markers": [250]
        },
        {
          "title": "Profit",
          "subtitle": "%",
          "ranges": [20, 25, 30],
          "measures": [21, 23],
          "markers": [26]
        },
        {
          "title": "Order Size",
          "subtitle": "US$, average",
          "ranges": [350, 500, 600],
          "measures": [100, 320],
          "markers": [550]
        },
        {
          "title": "New Customers",
          "subtitle": "count",
          "ranges": [1400, 2000, 2500],
          "measures": [1000, 1650],
          "markers": [2100]
        },
        {
          "title": "Satisfaction",
          "subtitle": "out of 5",
          "ranges": [3.5, 4.25, 5],
          "measures": [3.2, 4.7],
          "markers": [4.4]
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "formula",
          "expr": "datum[\"ranges\"] && datum[\"ranges\"][\"2\"]",
          "as": "ranges.2"
        },
        {
          "type": "formula",
          "expr": "datum[\"ranges\"] && datum[\"ranges\"][\"1\"]",
          "as": "ranges.1"
        },
        {
          "type": "formula",
          "expr": "datum[\"ranges\"] && datum[\"ranges\"][\"0\"]",
          "as": "ranges.0"
        },
        {
          "type": "formula",
          "expr": "datum[\"measures\"] && datum[\"measures\"][\"1\"]",
          "as": "measures.1"
        },
        {
          "type": "formula",
          "expr": "datum[\"measures\"] && datum[\"measures\"][\"0\"]",
          "as": "measures.0"
        },
        {
          "type": "formula",
          "expr": "datum[\"markers\"] && datum[\"markers\"][\"0\"]",
          "as": "markers.0"
        }
      ]
    },
    {
      "name": "row_domain",
      "source": "data_0",
      "transform": [{"type": "aggregate", "groupby": ["title"]}]
    },
    {
      "name": "data_2",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"ranges.2\"]) && isFinite(+datum[\"ranges.2\"])"
        }
      ]
    },
    {
      "name": "data_3",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"ranges.1\"]) && isFinite(+datum[\"ranges.1\"])"
        }
      ]
    },
    {
      "name": "data_4",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"ranges.0\"]) && isFinite(+datum[\"ranges.0\"])"
        }
      ]
    },
    {
      "name": "data_5",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"measures.1\"]) && isFinite(+datum[\"measures.1\"])"
        }
      ]
    },
    {
      "name": "data_6",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"measures.0\"]) && isFinite(+datum[\"measures.0\"])"
        }
      ]
    },
    {
      "name": "data_7",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"markers.0\"]) && isFinite(+datum[\"markers.0\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "child_width", "value": 200},
    {"name": "child_height", "value": 20}
  ],
  "layout": {"padding": 10, "columns": 1, "bounds": "full", "align": "all"},
  "marks": [
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "from": {"data": "row_domain"},
      "sort": {"field": "datum[\"title\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "isValid(parent[\"title\"]) ? parent[\"title\"] : \"\"+parent[\"title\"]"
        },
        "orient": "left",
        "style": "guide-label",
        "frame": "group",
        "baseline": "middle",
        "align": "right",
        "angle": 0,
        "offset": 10
      },
      "encode": {"update": {"height": {"signal": "child_height"}}}
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {"name": "facet", "data": "data_0", "groupby": ["title"]}
      },
      "sort": {"field": ["datum[\"title\"]"], "order": ["ascending"]},
      "data": [
        {
          "source": "facet",
          "name": "data_0",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"ranges.2\"]) && isFinite(+datum[\"ranges.2\"])"
            }
          ]
        },
        {
          "source": "facet",
          "name": "data_1",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"ranges.1\"]) && isFinite(+datum[\"ranges.1\"])"
            }
          ]
        },
        {
          "source": "facet",
          "name": "data_2",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"ranges.0\"]) && isFinite(+datum[\"ranges.0\"])"
            }
          ]
        },
        {
          "source": "facet",
          "name": "data_3",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"measures.1\"]) && isFinite(+datum[\"measures.1\"])"
            }
          ]
        },
        {
          "source": "facet",
          "name": "data_4",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"measures.0\"]) && isFinite(+datum[\"measures.0\"])"
            }
          ]
        },
        {
          "source": "facet",
          "name": "data_5",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"markers.0\"]) && isFinite(+datum[\"markers.0\"])"
            }
          ]
        }
      ],
      "encode": {
        "update": {
          "width": {"signal": "child_width"},
          "height": {"signal": "child_height"}
        }
      },
      "signals": [{"name": "height", "update": "child_height"}],
      "marks": [
        {
          "name": "child_layer_0_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "fill": {"value": "#eee"},
              "x": {"scale": "child_x", "field": "ranges\\.2"},
              "x2": {"scale": "child_x", "value": 0},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 18}
            }
          }
        },
        {
          "name": "child_layer_1_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "fill": {"value": "#ddd"},
              "x": {"scale": "child_x", "field": "ranges\\.1"},
              "x2": {"scale": "child_x", "value": 0},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 18}
            }
          }
        },
        {
          "name": "child_layer_2_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_2"},
          "encode": {
            "update": {
              "fill": {"value": "#ccc"},
              "x": {"scale": "child_x", "field": "ranges\\.0"},
              "x2": {"scale": "child_x", "value": 0},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 18}
            }
          }
        },
        {
          "name": "child_layer_3_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_3"},
          "encode": {
            "update": {
              "fill": {"value": "lightsteelblue"},
              "x": {"scale": "child_x", "field": "measures\\.1"},
              "x2": {"scale": "child_x", "value": 0},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 10}
            }
          }
        },
        {
          "name": "child_layer_4_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_4"},
          "encode": {
            "update": {
              "fill": {"value": "steelblue"},
              "x": {"scale": "child_x", "field": "measures\\.0"},
              "x2": {"scale": "child_x", "value": 0},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 10}
            }
          }
        },
        {
          "name": "child_layer_5_marks",
          "type": "rect",
          "style": ["tick"],
          "from": {"data": "data_5"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "black"},
              "xc": {"scale": "child_x", "field": "markers\\.0"},
              "yc": {"signal": "child_height", "mult": 0.5},
              "height": {"value": 15},
              "width": {"value": 2}
            }
          }
        }
      ],
      "scales": [
        {
          "name": "child_x",
          "type": "linear",
          "domain": {
            "fields": [
              {"data": "data_0", "field": "ranges\\.2"},
              {"data": "data_1", "field": "ranges\\.1"},
              {"data": "data_2", "field": "ranges\\.0"},
              {"data": "data_3", "field": "measures\\.1"},
              {"data": "data_4", "field": "measures\\.0"},
              {"data": "data_5", "field": "markers\\.0"}
            ]
          },
          "range": [0, {"signal": "child_width"}],
          "nice": false,
          "zero": true
        }
      ],
      "axes": [
        {
          "scale": "child_x",
          "orient": "bottom",
          "grid": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child_x",
          "orient": "bottom",
          "grid": false,
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "zindex": 0
        }
      ]
    }
  ]
}
