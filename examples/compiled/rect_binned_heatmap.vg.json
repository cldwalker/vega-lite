digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[45]&#010;Filter (isValid(datum[IMDB_Rating]) && isFinite(+datum[IMDB_Rating])) && (isValid(datum[Rotten_Tomatoes_Rating]) && isFinite(+datum[Rotten_Tomatoes_Rating]))"
  ]
  "46" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_60_IMDB_Rating, bin_maxbins_60_IMDB_Rating_end, bin_maxbins_40_Rotten_Tomatoes_Rating, bin_maxbins_40_Rotten_Tomatoes_Rating_end>;
    tooltip = "[46]&#010;Bin -1775269816"
  ]
  "47" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_60_IMDB_Rating, bin_maxbins_60_IMDB_Rating_end, bin_maxbins_40_Rotten_Tomatoes_Rating, bin_maxbins_40_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[49]&#010;Aggregate {dimensions:Set(\bin_maxbins_60_IMDB_Rating\,\bin_maxbins_60_IMDB_Rating_end\,\bin_maxbins_40_Rotten_Tomatoes_Rating\,\bin_maxbins_40_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "50" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[50]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:60},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:40},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "51" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[51]&#010;Output 52"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "49" "49" -> "50" "50" -> "51"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[45]&#010;Filter (isValid(datum[IMDB_Rating]) && isFinite(+datum[IMDB_Rating])) && (isValid(datum[Rotten_Tomatoes_Rating]) && isFinite(+datum[Rotten_Tomatoes_Rating]))"
  ]
  "46" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_60_IMDB_Rating, bin_maxbins_60_IMDB_Rating_end, bin_maxbins_40_Rotten_Tomatoes_Rating, bin_maxbins_40_Rotten_Tomatoes_Rating_end>;
    tooltip = "[46]&#010;Bin -1775269816"
  ]
  "49" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_60_IMDB_Rating, bin_maxbins_60_IMDB_Rating_end, bin_maxbins_40_Rotten_Tomatoes_Rating, bin_maxbins_40_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[49]&#010;Aggregate {dimensions:Set(\bin_maxbins_60_IMDB_Rating\,\bin_maxbins_60_IMDB_Rating_end\,\bin_maxbins_40_Rotten_Tomatoes_Rating\,\bin_maxbins_40_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "50" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[50]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:60},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:40},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "51" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[51]&#010;Output 52"
  ]

  "43" -> "45" "45" -> "46" "46" -> "49" "49" -> "50" "50" -> "51"
}
SignalRefWrapper { signal: [Getter] }
SignalRefWrapper { signal: [Getter] }
{ data: 'main', field: '__count' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 300,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/movies.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "filter",
          "expr": "(isValid(datum[\"IMDB_Rating\"]) && isFinite(+datum[\"IMDB_Rating\"])) && (isValid(datum[\"Rotten_Tomatoes_Rating\"]) && isFinite(+datum[\"Rotten_Tomatoes_Rating\"]))"
        },
        {
          "type": "extent",
          "field": "IMDB_Rating",
          "signal": "bin_maxbins_60_IMDB_Rating_extent"
        },
        {
          "type": "bin",
          "field": "IMDB_Rating",
          "as": [
            "bin_maxbins_60_IMDB_Rating",
            "bin_maxbins_60_IMDB_Rating_end"
          ],
          "signal": "bin_maxbins_60_IMDB_Rating_bins",
          "extent": {"signal": "bin_maxbins_60_IMDB_Rating_extent"},
          "maxbins": 60
        },
        {
          "type": "extent",
          "field": "Rotten_Tomatoes_Rating",
          "signal": "bin_maxbins_40_Rotten_Tomatoes_Rating_extent"
        },
        {
          "type": "bin",
          "field": "Rotten_Tomatoes_Rating",
          "as": [
            "bin_maxbins_40_Rotten_Tomatoes_Rating",
            "bin_maxbins_40_Rotten_Tomatoes_Rating_end"
          ],
          "signal": "bin_maxbins_40_Rotten_Tomatoes_Rating_bins",
          "extent": {"signal": "bin_maxbins_40_Rotten_Tomatoes_Rating_extent"},
          "maxbins": 40
        },
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_60_IMDB_Rating",
            "bin_maxbins_60_IMDB_Rating_end",
            "bin_maxbins_40_Rotten_Tomatoes_Rating",
            "bin_maxbins_40_Rotten_Tomatoes_Rating_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_60_IMDB_Rating\"]) && isFinite(+datum[\"bin_maxbins_60_IMDB_Rating\"]) && isValid(datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"]) && isFinite(+datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "rect",
      "style": ["rect"],
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "__count"},
          "x2": [
            {
              "test": "!isValid(datum[\"bin_maxbins_60_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_60_IMDB_Rating\"])",
              "value": 0
            },
            {"scale": "x", "field": "bin_maxbins_60_IMDB_Rating", "offset": 0.5}
          ],
          "x": [
            {
              "test": "!isValid(datum[\"bin_maxbins_60_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_60_IMDB_Rating\"])",
              "value": 0
            },
            {
              "scale": "x",
              "field": "bin_maxbins_60_IMDB_Rating_end",
              "offset": 0.5
            }
          ],
          "y2": [
            {
              "test": "!isValid(datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"]) || !isFinite(+datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"])",
              "field": {"group": "height"}
            },
            {
              "scale": "y",
              "field": "bin_maxbins_40_Rotten_Tomatoes_Rating",
              "offset": 0.5
            }
          ],
          "y": [
            {
              "test": "!isValid(datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"]) || !isFinite(+datum[\"bin_maxbins_40_Rotten_Tomatoes_Rating\"])",
              "field": {"group": "height"}
            },
            {
              "scale": "y",
              "field": "bin_maxbins_40_Rotten_Tomatoes_Rating_end",
              "offset": 0.5
            }
          ]
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {
        "signal": "[bin_maxbins_60_IMDB_Rating_bins.start, bin_maxbins_60_IMDB_Rating_bins.stop]"
      },
      "range": [0, {"signal": "width"}],
      "bins": {"signal": "bin_maxbins_60_IMDB_Rating_bins"},
      "zero": false
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "signal": "[bin_maxbins_40_Rotten_Tomatoes_Rating_bins.start, bin_maxbins_40_Rotten_Tomatoes_Rating_bins.stop]"
      },
      "range": [{"signal": "height"}, 0],
      "bins": {"signal": "bin_maxbins_40_Rotten_Tomatoes_Rating_bins"},
      "zero": false
    },
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "source_0", "field": "__count"},
      "range": "heatmap",
      "interpolate": "hcl",
      "zero": false
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "IMDB_Rating (binned)",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/10)"},
      "zindex": 1
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Rotten_Tomatoes_Rating (binned)",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/10)"},
      "zindex": 1
    }
  ],
  "legends": [
    {
      "fill": "color",
      "gradientLength": {"signal": "clamp(height, 64, 200)"},
      "symbolType": "square",
      "title": "Count of Records"
    }
  ],
  "config": {"style": {"cell": {"stroke": "transparent"}}}
}
