digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/anscombe.json</i>>;
    tooltip = "[43]&#010;data/anscombe.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> Series>;
    tooltip = "[49]&#010;Facet c:{fields:[Series],name:column_domain}"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> X, Y>;
    tooltip = "[53]&#010;FilterInvalid {X:{field:X,scale:{zero:false},type:quantitative},Y:{field:Y,scale:{zero:false},type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "51" "51" -> "53" "53" -> "54"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/anscombe.json</i>>;
    tooltip = "[43]&#010;data/anscombe.json"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> Series>;
    tooltip = "[49]&#010;Facet c:{fields:[Series],name:column_domain}"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> X, Y>;
    tooltip = "[53]&#010;FilterInvalid {X:{field:X,scale:{zero:false},type:quantitative},Y:{field:Y,scale:{zero:false},type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "57" [
    label = <Output<br/><i>clone_child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[57]&#010;Output 56"
  ]

  "43" -> "53" "53" -> "47" "47" -> "57" "57" -> "49" "49" -> "54"
}
{ data: 'scale_child_main', field: 'X' }
{ data: 'scale_child_main', field: 'Y' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Anscombe's Quartet",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "url": "data/anscombe.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"X\"]) && isFinite(+datum[\"X\"]) && isValid(datum[\"Y\"]) && isFinite(+datum[\"Y\"])"
        }
      ]
    },
    {
      "name": "column_domain",
      "source": "source_0",
      "transform": [{"type": "aggregate", "groupby": ["Series"]}]
    }
  ],
  "signals": [
    {"name": "child_width", "value": 200},
    {"name": "child_height", "value": 200}
  ],
  "layout": {
    "padding": 20,
    "offset": {"columnTitle": 10},
    "columns": {"signal": "length(data('column_domain'))"},
    "bounds": "full",
    "align": "all"
  },
  "marks": [
    {
      "name": "column-title",
      "type": "group",
      "role": "column-title",
      "title": {"text": "Series", "style": "guide-title", "offset": 10}
    },
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "encode": {"update": {"height": {"signal": "child_height"}}},
      "axes": [
        {
          "scale": "y",
          "orient": "left",
          "grid": false,
          "title": "Y",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "column_header",
      "type": "group",
      "role": "column-header",
      "from": {"data": "column_domain"},
      "sort": {"field": "datum[\"Series\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "isValid(parent[\"Series\"]) ? parent[\"Series\"] : \"\"+parent[\"Series\"]"
        },
        "style": "guide-label",
        "frame": "group",
        "offset": 10
      },
      "encode": {"update": {"width": {"signal": "child_width"}}}
    },
    {
      "name": "column_footer",
      "type": "group",
      "role": "column-footer",
      "from": {"data": "column_domain"},
      "sort": {"field": "datum[\"Series\"]", "order": "ascending"},
      "encode": {"update": {"width": {"signal": "child_width"}}},
      "axes": [
        {
          "scale": "x",
          "orient": "bottom",
          "grid": false,
          "title": "X",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {"name": "facet", "data": "source_0", "groupby": ["Series"]}
      },
      "sort": {"field": ["datum[\"Series\"]"], "order": ["ascending"]},
      "encode": {
        "update": {
          "width": {"signal": "child_width"},
          "height": {"signal": "child_height"}
        }
      },
      "marks": [
        {
          "name": "child_marks",
          "type": "symbol",
          "style": ["circle"],
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "opacity": {"value": 1},
              "fill": {"value": "#4c78a8"},
              "x": [
                {
                  "test": "!isValid(datum[\"X\"]) || !isFinite(+datum[\"X\"])",
                  "value": 0
                },
                {"scale": "x", "field": "X"}
              ],
              "y": [
                {
                  "test": "!isValid(datum[\"Y\"]) || !isFinite(+datum[\"Y\"])",
                  "field": {"group": "height"}
                },
                {"scale": "y", "field": "Y"}
              ],
              "shape": {"value": "circle"}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "x",
          "orient": "bottom",
          "gridScale": "y",
          "grid": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "y",
          "orient": "left",
          "gridScale": "x",
          "grid": true,
          "tickCount": {"signal": "ceil(child_height/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {"data": "source_0", "field": "X"},
      "range": [0, {"signal": "child_width"}],
      "zero": false,
      "nice": true
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "Y"},
      "range": [{"signal": "child_height"}, 0],
      "zero": false,
      "nice": true
    }
  ]
}
