digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end>;
    tooltip = "[50]&#010;Bin 1979429729"
  ]
  "51" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[53]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "54" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[54]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative}}"
  ]
  "55" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]
  "57" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[57]&#010;Identifier"
  ]
  "58" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end>;
    tooltip = "[58]&#010;Bin -1188918783"
  ]
  "59" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[61]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[62]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,scale:{range:[90,450]},type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "51" "51" -> "53" "53" -> "54" "54" -> "55" "47" -> "57" "57" -> "58" "58" -> "59" "59" -> "61" "61" -> "62" "62" -> "63"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "53" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[53]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "54" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[54]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative}}"
  ]
  "55" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]
  "58" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end>;
    tooltip = "[58]&#010;Bin -1188918783"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[62]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,scale:{range:[90,450]},type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "58" "58" -> "53" "53" -> "54" "54" -> "55" "53" -> "62" "62" -> "63"
}
SignalRefWrapper { signal: [Getter] }
SignalRefWrapper { signal: [Getter] }
{ data: 'layer_0_main', field: '__count' }
{ data: 'layer_1_main', field: '__count' }
SignalRefWrapper { signal: [Getter] }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/movies.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "extent",
          "field": "IMDB_Rating",
          "signal": "layer_1_bin_maxbins_10_IMDB_Rating_extent"
        },
        {
          "type": "bin",
          "field": "IMDB_Rating",
          "as": [
            "bin_maxbins_10_IMDB_Rating",
            "bin_maxbins_10_IMDB_Rating_end"
          ],
          "signal": "layer_1_bin_maxbins_10_IMDB_Rating_bins",
          "extent": {"signal": "layer_1_bin_maxbins_10_IMDB_Rating_extent"},
          "maxbins": 10
        },
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_IMDB_Rating",
            "bin_maxbins_10_IMDB_Rating_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "arc",
      "style": ["arc"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "stroke": {"value": "white"},
          "tooltip": {
            "signal": "{\"IMDB_Rating (binned)\": !isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"]) ? \"null\" : format(datum[\"bin_maxbins_10_IMDB_Rating\"], \"\") + \" – \" + format(datum[\"bin_maxbins_10_IMDB_Rating_end\"], \"\"), \"Count of Records\": format(datum[\"__count\"], \"\")}"
          },
          "fill": {"value": "#4c78a8"},
          "x": {"signal": "width", "mult": 0.5},
          "y": {"signal": "height", "mult": 0.5},
          "outerRadius": {"scale": "radius", "field": "__count"},
          "innerRadius": {"scale": "radius", "value": 0},
          "endAngle": [
            {
              "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
              "value": 0
            },
            {"scale": "theta", "field": "bin_maxbins_10_IMDB_Rating"}
          ],
          "startAngle": [
            {
              "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
              "value": 0
            },
            {"scale": "theta", "field": "bin_maxbins_10_IMDB_Rating_end"}
          ]
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "text",
      "style": ["text"],
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "align": {"value": "right"},
          "fill": {"value": "black"},
          "x": {"signal": "width", "mult": 0.5},
          "y": {"signal": "height", "mult": 0.5},
          "text": {
            "signal": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"]) ? \"null\" : format(datum[\"bin_maxbins_10_IMDB_Rating\"], \"\") + \" – \" + format(datum[\"bin_maxbins_10_IMDB_Rating_end\"], \"\")"
          },
          "angle": {
            "signal": "scale(\"angle\", 0.5 * datum[\"bin_maxbins_10_IMDB_Rating\"] + 0.5 * datum[\"bin_maxbins_10_IMDB_Rating_end\"])"
          },
          "baseline": {"value": "middle"},
          "radius": {"scale": "radius", "field": "__count", "offset": 15},
          "theta": [
            {
              "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
              "value": 0
            },
            {
              "signal": "scale(\"theta\", 0.5 * datum[\"bin_maxbins_10_IMDB_Rating\"] + 0.5 * datum[\"bin_maxbins_10_IMDB_Rating_end\"])"
            }
          ]
        }
      }
    }
  ],
  "scales": [
    {
      "name": "theta",
      "type": "linear",
      "domain": {
        "signal": "[layer_1_bin_maxbins_10_IMDB_Rating_bins.start, layer_1_bin_maxbins_10_IMDB_Rating_bins.stop]"
      },
      "range": [0, 6.283185307179586],
      "bins": {"signal": "layer_1_bin_maxbins_10_IMDB_Rating_bins"},
      "zero": false
    },
    {
      "name": "radius",
      "type": "sqrt",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "__count"},
          {"data": "data_1", "field": "__count"}
        ]
      },
      "range": [0, {"signal": "min(width,height)/2"}],
      "zero": true
    },
    {
      "name": "angle",
      "type": "linear",
      "domain": {
        "signal": "[layer_1_bin_maxbins_10_IMDB_Rating_bins.start, layer_1_bin_maxbins_10_IMDB_Rating_bins.stop]"
      },
      "range": [90, 450],
      "bins": {"signal": "layer_1_bin_maxbins_10_IMDB_Rating_bins"},
      "zero": false
    }
  ],
  "config": {"style": {"cell": {"stroke": null}}}
}
