digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> Horsepower<br/><font color="grey" point-size="10">OUT:</font> Horsepower>;
    tooltip = "[45]&#010;Parse {Horsepower:number}"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Horsepower<br/><font color="grey" point-size="10">OUT:</font> min_Horsepower, max_Horsepower>;
    tooltip = "[48]&#010;Aggregate {dimensions:Set(\Origin\),measures:{Horsepower:{max:Set(\max_Horsepower\),min:Set(\min_Horsepower\)}}}"
  ]
  "49" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[49]&#010;FilterInvalid {Horsepower:{aggregate:min,field:Horsepower,type:quantitative}}"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "49" "49" -> "50"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "45" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> Horsepower<br/><font color="grey" point-size="10">OUT:</font> Horsepower>;
    tooltip = "[45]&#010;Parse {Horsepower:number}"
  ]
  "48" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Horsepower<br/><font color="grey" point-size="10">OUT:</font> min_Horsepower, max_Horsepower>;
    tooltip = "[48]&#010;Aggregate {dimensions:Set(\Origin\),measures:{Horsepower:{max:Set(\max_Horsepower\),min:Set(\min_Horsepower\)}}}"
  ]
  "49" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[49]&#010;FilterInvalid {Horsepower:{aggregate:min,field:Horsepower,type:quantitative}}"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]

  "43" -> "45" "45" -> "48" "48" -> "49" "49" -> "50"
}
{ data: 'main', field: 'Origin', sort: true }
{ data: 'main', field: 'min_Horsepower' }
{ data: 'main', field: 'max_Horsepower' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Minimum and maxmimum horsepower of cars from different origins.",
  "background": "white",
  "padding": 5,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/cars.json",
      "format": {"type": "json", "parse": {"Horsepower": "number"}},
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["Origin"],
          "ops": ["min", "max"],
          "fields": ["Horsepower", "Horsepower"],
          "as": ["min_Horsepower", "max_Horsepower"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"min_Horsepower\"]) && isFinite(+datum[\"min_Horsepower\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "x_step", "value": 20},
    {"name": "width", "update": "bandspace(domain('x').length, 0, 0) * x_step"}
  ],
  "marks": [
    {
      "name": "marks",
      "type": "rule",
      "style": ["rule"],
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "stroke": {"value": "black"},
          "x": {"scale": "x", "field": "Origin", "band": 0.5},
          "y": {"scale": "y", "field": "min_Horsepower"},
          "y2": {"scale": "y", "field": "max_Horsepower"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "band",
      "domain": {"data": "source_0", "field": "Origin", "sort": true},
      "range": {"step": {"signal": "x_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "data": "source_0",
        "fields": ["min_Horsepower", "max_Horsepower"]
      },
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "axes": [
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "Origin",
      "labelAlign": "right",
      "labelAngle": 270,
      "labelBaseline": "middle",
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Min of Horsepower, Max of Horsepower",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ]
}
