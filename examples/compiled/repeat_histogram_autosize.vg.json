digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> Horsepower<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_Horsepower, bin_maxbins_10_Horsepower_end>;
    tooltip = "[50]&#010;Bin -1489521219"
  ]
  "51" [
    label = <Output<br/><i>child__Horsepower_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_Horsepower, bin_maxbins_10_Horsepower_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[53]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_Horsepower\,\bin_maxbins_10_Horsepower_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "54" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[54]&#010;FilterInvalid {Horsepower:{bin:{maxbins:10},field:Horsepower,type:quantitative}}"
  ]
  "55" [
    label = <Output<br/><i>child__Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]
  "57" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[57]&#010;Identifier"
  ]
  "58" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_Miles_per_Gallon, bin_maxbins_10_Miles_per_Gallon_end>;
    tooltip = "[58]&#010;Bin 2097252013"
  ]
  "59" [
    label = <Output<br/><i>child__Miles_per_Gallon_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_Miles_per_Gallon, bin_maxbins_10_Miles_per_Gallon_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[61]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_Miles_per_Gallon\,\bin_maxbins_10_Miles_per_Gallon_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon>;
    tooltip = "[62]&#010;FilterInvalid {Miles_per_Gallon:{bin:{maxbins:10},field:Miles_per_Gallon,type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>child__Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "51" "51" -> "53" "53" -> "54" "54" -> "55" "47" -> "57" "57" -> "58" "58" -> "59" "59" -> "61" "61" -> "62" "62" -> "63"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "53" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_Horsepower, bin_maxbins_10_Horsepower_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[53]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_Horsepower\,\bin_maxbins_10_Horsepower_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "54" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[54]&#010;FilterInvalid {Horsepower:{bin:{maxbins:10},field:Horsepower,type:quantitative}}"
  ]
  "55" [
    label = <Output<br/><i>child__Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]
  "58" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon, Horsepower<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_Miles_per_Gallon, bin_maxbins_10_Miles_per_Gallon_end, bin_maxbins_10_Horsepower, bin_maxbins_10_Horsepower_end>;
    tooltip = "[58]&#010;Bin 1484359516"
  ]
  "61" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_Miles_per_Gallon, bin_maxbins_10_Miles_per_Gallon_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[61]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_Miles_per_Gallon\,\bin_maxbins_10_Miles_per_Gallon_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon>;
    tooltip = "[62]&#010;FilterInvalid {Miles_per_Gallon:{bin:{maxbins:10},field:Miles_per_Gallon,type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>child__Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "58" "58" -> "61" "61" -> "62" "62" -> "63" "58" -> "53" "53" -> "54" "54" -> "55"
}
SignalRefWrapper { signal: [Getter] }
{ data: 'child__Horsepower_main', field: '__count' }
SignalRefWrapper { signal: [Getter] }
{ data: 'child__Miles_per_Gallon_main', field: '__count' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "autosize": {"type": "fit-x", "contains": "padding"},
  "background": "white",
  "padding": 5,
  "width": 200,
  "data": [
    {
      "name": "source_0",
      "url": "data/cars.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "extent",
          "field": "Miles_per_Gallon",
          "signal": "child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_extent"
        },
        {
          "type": "bin",
          "field": "Miles_per_Gallon",
          "as": [
            "bin_maxbins_10_Miles_per_Gallon",
            "bin_maxbins_10_Miles_per_Gallon_end"
          ],
          "signal": "child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_bins",
          "extent": {
            "signal": "child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_extent"
          },
          "maxbins": 10
        },
        {
          "type": "extent",
          "field": "Horsepower",
          "signal": "child__Horsepower_bin_maxbins_10_Horsepower_extent"
        },
        {
          "type": "bin",
          "field": "Horsepower",
          "as": ["bin_maxbins_10_Horsepower", "bin_maxbins_10_Horsepower_end"],
          "signal": "child__Horsepower_bin_maxbins_10_Horsepower_bins",
          "extent": {
            "signal": "child__Horsepower_bin_maxbins_10_Horsepower_extent"
          },
          "maxbins": 10
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_Miles_per_Gallon",
            "bin_maxbins_10_Miles_per_Gallon_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_Miles_per_Gallon\"]) && isFinite(+datum[\"bin_maxbins_10_Miles_per_Gallon\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_Horsepower",
            "bin_maxbins_10_Horsepower_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_Horsepower\"]) && isFinite(+datum[\"bin_maxbins_10_Horsepower\"])"
        }
      ]
    }
  ],
  "signals": [{"name": "childHeight", "value": 200}],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "all"},
  "marks": [
    {
      "type": "group",
      "name": "child__Horsepower_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "childHeight"}
        }
      },
      "marks": [
        {
          "name": "child__Horsepower_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "fill": {"value": "#4c78a8"},
              "x2": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Horsepower\"]) || !isFinite(+datum[\"bin_maxbins_10_Horsepower\"])",
                  "value": 0
                },
                {
                  "scale": "child__Horsepower_x",
                  "field": "bin_maxbins_10_Horsepower",
                  "offset": 1
                }
              ],
              "x": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Horsepower\"]) || !isFinite(+datum[\"bin_maxbins_10_Horsepower\"])",
                  "value": 0
                },
                {
                  "scale": "child__Horsepower_x",
                  "field": "bin_maxbins_10_Horsepower_end"
                }
              ],
              "y": {"scale": "child__Horsepower_y", "field": "__count"},
              "y2": {"scale": "child__Horsepower_y", "value": 0}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__Horsepower_y",
          "orient": "left",
          "gridScale": "child__Horsepower_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__Horsepower_x",
          "orient": "bottom",
          "grid": false,
          "title": "Horsepower (binned)",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(width/10)"},
          "zindex": 0
        },
        {
          "scale": "child__Horsepower_y",
          "orient": "left",
          "grid": false,
          "title": "Count of Records",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__Miles_per_Gallon_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "width"},
          "height": {"signal": "childHeight"}
        }
      },
      "marks": [
        {
          "name": "child__Miles_per_Gallon_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "fill": {"value": "#4c78a8"},
              "x2": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Miles_per_Gallon\"]) || !isFinite(+datum[\"bin_maxbins_10_Miles_per_Gallon\"])",
                  "value": 0
                },
                {
                  "scale": "child__Miles_per_Gallon_x",
                  "field": "bin_maxbins_10_Miles_per_Gallon",
                  "offset": 1
                }
              ],
              "x": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Miles_per_Gallon\"]) || !isFinite(+datum[\"bin_maxbins_10_Miles_per_Gallon\"])",
                  "value": 0
                },
                {
                  "scale": "child__Miles_per_Gallon_x",
                  "field": "bin_maxbins_10_Miles_per_Gallon_end"
                }
              ],
              "y": {"scale": "child__Miles_per_Gallon_y", "field": "__count"},
              "y2": {"scale": "child__Miles_per_Gallon_y", "value": 0}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__Miles_per_Gallon_y",
          "orient": "left",
          "gridScale": "child__Miles_per_Gallon_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__Miles_per_Gallon_x",
          "orient": "bottom",
          "grid": false,
          "title": "Miles_per_Gallon (binned)",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(width/10)"},
          "zindex": 0
        },
        {
          "scale": "child__Miles_per_Gallon_y",
          "orient": "left",
          "grid": false,
          "title": "Count of Records",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "child__Horsepower_x",
      "type": "linear",
      "domain": {
        "signal": "[child__Horsepower_bin_maxbins_10_Horsepower_bins.start, child__Horsepower_bin_maxbins_10_Horsepower_bins.stop]"
      },
      "range": [0, {"signal": "width"}],
      "bins": {"signal": "child__Horsepower_bin_maxbins_10_Horsepower_bins"},
      "zero": false
    },
    {
      "name": "child__Horsepower_y",
      "type": "linear",
      "domain": {"data": "data_1", "field": "__count"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__Miles_per_Gallon_x",
      "type": "linear",
      "domain": {
        "signal": "[child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_bins.start, child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_bins.stop]"
      },
      "range": [0, {"signal": "width"}],
      "bins": {
        "signal": "child__Miles_per_Gallon_bin_maxbins_10_Miles_per_Gallon_bins"
      },
      "zero": false
    },
    {
      "name": "child__Miles_per_Gallon_y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "__count"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    }
  ]
}
