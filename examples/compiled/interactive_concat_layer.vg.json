digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Output<br/><i>concat_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Output<br/><i>concat_0_main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[52]&#010;Output 53"
  ]
  "54" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[54]&#010;Identifier"
  ]
  "55" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end>;
    tooltip = "[55]&#010;Bin -1764862536"
  ]
  "56" [
    label = <Output<br/><i>concat_0_layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[58]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\,\bin_maxbins_10_Rotten_Tomatoes_Rating\,\bin_maxbins_10_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "59" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[59]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:10},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "60" [
    label = <Output<br/><i>concat_0_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[60]&#010;Output 61"
  ]
  "62" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[62]&#010;Identifier"
  ]
  "63" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end>;
    tooltip = "[63]&#010;Bin -1171365636"
  ]
  "64" [
    label = <Filter>;
    tooltip = "[64]&#010;Filter !(length(data(pts_store))) || (vlSelectionTest(pts_store, datum))"
  ]
  "65" [
    label = <Output<br/><i>concat_0_layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[65]&#010;Output 66"
  ]
  "67" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[67]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\,\bin_maxbins_10_Rotten_Tomatoes_Rating\,\bin_maxbins_10_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "68" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[68]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:10},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "69" [
    label = <Output<br/><i>concat_0_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[69]&#010;Output 70"
  ]
  "71" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[71]&#010;Identifier"
  ]
  "72" [
    label = <Output<br/><i>concat_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[72]&#010;Output 73"
  ]
  "74" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Major_Genre, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[74]&#010;Aggregate {dimensions:Set(\Major_Genre\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "75" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[75]&#010;Output 76"
  ]
  "77" [
    label = <Filter>;
    tooltip = "[77]&#010;Filter !(length(data(pts_store))) || (vlSelectionTest(pts_store, datum))"
  ]
  "78" [
    label = <Output<br/><i>concat_1_lookup_pts</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[78]&#010;Output 79"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "52" "52" -> "54" "54" -> "55" "55" -> "56" "56" -> "58" "58" -> "59" "59" -> "60" "52" -> "62" "62" -> "63" "63" -> "64" "64" -> "65" "65" -> "67" "67" -> "68" "68" -> "69" "47" -> "71" "71" -> "72" "72" -> "74" "74" -> "75" "75" -> "77" "77" -> "78"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "58" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[58]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\,\bin_maxbins_10_Rotten_Tomatoes_Rating\,\bin_maxbins_10_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "59" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[59]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:10},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "60" [
    label = <Output<br/><i>concat_0_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[60]&#010;Output 61"
  ]
  "63" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end>;
    tooltip = "[63]&#010;Bin -1171365636"
  ]
  "64" [
    label = <Filter>;
    tooltip = "[64]&#010;Filter !(length(data(pts_store))) || (vlSelectionTest(pts_store, datum))"
  ]
  "67" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_IMDB_Rating, bin_maxbins_10_IMDB_Rating_end, bin_maxbins_10_Rotten_Tomatoes_Rating, bin_maxbins_10_Rotten_Tomatoes_Rating_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[67]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_IMDB_Rating\,\bin_maxbins_10_IMDB_Rating_end\,\bin_maxbins_10_Rotten_Tomatoes_Rating\,\bin_maxbins_10_Rotten_Tomatoes_Rating_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "68" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, Rotten_Tomatoes_Rating>;
    tooltip = "[68]&#010;FilterInvalid {IMDB_Rating:{bin:{maxbins:10},field:IMDB_Rating,type:quantitative},Rotten_Tomatoes_Rating:{bin:{maxbins:10},field:Rotten_Tomatoes_Rating,type:quantitative}}"
  ]
  "69" [
    label = <Output<br/><i>concat_0_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[69]&#010;Output 70"
  ]
  "74" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Major_Genre, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[74]&#010;Aggregate {dimensions:Set(\Major_Genre\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "75" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[75]&#010;Output 76"
  ]

  "43" -> "63" "63" -> "64" "64" -> "67" "67" -> "68" "68" -> "69" "63" -> "58" "58" -> "59" "59" -> "60" "43" -> "74" "74" -> "75"
}
{ data: 'concat_0_layer_0_main', field: '__count' }
{ data: 'concat_0_layer_1_main', field: '__count' }
SignalRefWrapper { signal: [Getter] }
SignalRefWrapper { signal: [Getter] }
SignalRefWrapper { signal: [Getter] }
SignalRefWrapper { signal: [Getter] }
{ data: 'concat_1_main', field: 'Major_Genre', sort: true }
{ data: 'concat_1_main', field: '__count' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A dashboard with cross-highlighting.",
  "background": "white",
  "padding": 5,
  "data": [
    {"name": "pts_store"},
    {"name": "source_0", "url": "data/movies.json", "format": {"type": "json"}},
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "extent",
          "field": "IMDB_Rating",
          "signal": "concat_0_layer_1_bin_maxbins_10_IMDB_Rating_extent"
        },
        {
          "type": "bin",
          "field": "IMDB_Rating",
          "as": [
            "bin_maxbins_10_IMDB_Rating",
            "bin_maxbins_10_IMDB_Rating_end"
          ],
          "signal": "concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins",
          "extent": {
            "signal": "concat_0_layer_1_bin_maxbins_10_IMDB_Rating_extent"
          },
          "maxbins": 10
        },
        {
          "type": "extent",
          "field": "Rotten_Tomatoes_Rating",
          "signal": "concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_extent"
        },
        {
          "type": "bin",
          "field": "Rotten_Tomatoes_Rating",
          "as": [
            "bin_maxbins_10_Rotten_Tomatoes_Rating",
            "bin_maxbins_10_Rotten_Tomatoes_Rating_end"
          ],
          "signal": "concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins",
          "extent": {
            "signal": "concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_extent"
          },
          "maxbins": 10
        }
      ]
    },
    {
      "name": "data_1",
      "source": "data_0",
      "transform": [
        {
          "type": "filter",
          "expr": "!(length(data(\"pts_store\"))) || (vlSelectionTest(\"pts_store\", datum))"
        },
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_IMDB_Rating",
            "bin_maxbins_10_IMDB_Rating_end",
            "bin_maxbins_10_Rotten_Tomatoes_Rating",
            "bin_maxbins_10_Rotten_Tomatoes_Rating_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"]) && isValid(datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"])"
        }
      ]
    },
    {
      "name": "data_2",
      "source": "data_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_IMDB_Rating",
            "bin_maxbins_10_IMDB_Rating_end",
            "bin_maxbins_10_Rotten_Tomatoes_Rating",
            "bin_maxbins_10_Rotten_Tomatoes_Rating_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"]) && isValid(datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"]) && isFinite(+datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"])"
        }
      ]
    },
    {
      "name": "data_3",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["Major_Genre"],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        }
      ]
    }
  ],
  "signals": [
    {"name": "concat_0_width", "value": 200},
    {"name": "concat_0_height", "value": 200},
    {"name": "concat_1_width", "value": 330},
    {"name": "concat_1_height", "value": 120},
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {"name": "pts", "update": "vlSelectionResolve(\"pts_store\", \"union\")"}
  ],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "concat_0_width"},
          "height": {"signal": "concat_0_height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_layer_0_marks",
          "type": "rect",
          "style": ["rect"],
          "interactive": false,
          "from": {"data": "data_2"},
          "encode": {
            "update": {
              "fill": {"scale": "color", "field": "__count"},
              "x2": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
                  "value": 0
                },
                {
                  "scale": "concat_0_x",
                  "field": "bin_maxbins_10_IMDB_Rating",
                  "offset": 0.5
                }
              ],
              "x": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
                  "value": 0
                },
                {
                  "scale": "concat_0_x",
                  "field": "bin_maxbins_10_IMDB_Rating_end",
                  "offset": 0.5
                }
              ],
              "y2": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"])",
                  "field": {"group": "height"}
                },
                {
                  "scale": "concat_0_y",
                  "field": "bin_maxbins_10_Rotten_Tomatoes_Rating",
                  "offset": 0.5
                }
              ],
              "y": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"])",
                  "field": {"group": "height"}
                },
                {
                  "scale": "concat_0_y",
                  "field": "bin_maxbins_10_Rotten_Tomatoes_Rating_end",
                  "offset": 0.5
                }
              ]
            }
          }
        },
        {
          "name": "concat_0_layer_1_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": false,
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "fill": {"value": "transparent"},
              "stroke": {"value": "#666"},
              "x": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_IMDB_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_IMDB_Rating\"])",
                  "value": 0
                },
                {
                  "signal": "scale(\"concat_0_x\", 0.5 * datum[\"bin_maxbins_10_IMDB_Rating\"] + 0.5 * datum[\"bin_maxbins_10_IMDB_Rating_end\"])"
                }
              ],
              "y": [
                {
                  "test": "!isValid(datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"]) || !isFinite(+datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"])",
                  "field": {"group": "height"}
                },
                {
                  "signal": "scale(\"concat_0_y\", 0.5 * datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating\"] + 0.5 * datum[\"bin_maxbins_10_Rotten_Tomatoes_Rating_end\"])"
                }
              ],
              "size": {"scale": "size", "field": "__count"}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "title": "IMDB_Rating (binned)",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_0_width/10)"},
          "zindex": 1
        },
        {
          "scale": "concat_0_y",
          "orient": "left",
          "grid": false,
          "title": "Rotten_Tomatoes_Rating (binned)",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_0_height/10)"},
          "zindex": 1
        }
      ],
      "legends": [
        {
          "direction": "horizontal",
          "gradientLength": 120,
          "title": "All Movies",
          "fill": "color",
          "symbolType": "square"
        },
        {
          "title": "In Selected Category",
          "size": "size",
          "gradientLength": {"signal": "clamp(concat_0_height, 64, 200)"},
          "symbolType": "circle",
          "encode": {
            "symbols": {
              "update": {
                "fill": {"value": "transparent"},
                "stroke": {"value": "#666"}
              }
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_1_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "concat_1_width"},
          "height": {"signal": "concat_1_height"}
        }
      },
      "signals": [
        {
          "name": "pts_tuple",
          "on": [
            {
              "events": [{"source": "scope", "type": "click"}],
              "update": "datum && item().mark.marktype !== 'group' ? {unit: \"concat_1\", fields: pts_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"Major_Genre\"]]} : null",
              "force": true
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "null"
            }
          ]
        },
        {
          "name": "pts_tuple_fields",
          "value": [{"field": "Major_Genre", "channel": "x", "type": "E"}]
        },
        {
          "name": "pts_modify",
          "on": [
            {
              "events": {"signal": "pts_tuple"},
              "update": "modify(\"pts_store\", pts_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "concat_1_marks",
          "type": "rect",
          "style": ["bar"],
          "interactive": true,
          "from": {"data": "data_3"},
          "encode": {
            "update": {
              "fill": [
                {
                  "test": "!(length(data(\"pts_store\"))) || (vlSelectionTest(\"pts_store\", datum))",
                  "value": "steelblue"
                },
                {"value": "grey"}
              ],
              "x": {"scale": "concat_1_x", "field": "Major_Genre"},
              "width": {"scale": "concat_1_x", "band": 1},
              "y": {"scale": "concat_1_y", "field": "__count"},
              "y2": {"scale": "concat_1_y", "value": 0}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_1_y",
          "orient": "left",
          "gridScale": "concat_1_x",
          "grid": true,
          "tickCount": {"signal": "ceil(concat_1_height/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "concat_1_x",
          "orient": "bottom",
          "grid": false,
          "title": "Major_Genre",
          "labelAngle": 320,
          "labelAlign": "right",
          "labelBaseline": "top",
          "zindex": 0
        },
        {
          "scale": "concat_1_y",
          "orient": "left",
          "grid": false,
          "title": "Count of Records",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_1_height/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "data_2", "field": "__count"},
      "range": "heatmap",
      "interpolate": "hcl",
      "zero": false
    },
    {
      "name": "size",
      "type": "linear",
      "domain": {"data": "data_1", "field": "__count"},
      "range": [
        0,
        {
          "signal": "pow(0.95 * min(concat_0_width / ((concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins.stop - concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins.start) / concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins.step), concat_0_height / ((concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins.stop - concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins.start) / concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins.step)), 2)"
        }
      ],
      "zero": true
    },
    {
      "name": "concat_0_x",
      "type": "linear",
      "domain": {
        "signal": "[concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins.start, concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins.stop]"
      },
      "range": [0, {"signal": "concat_0_width"}],
      "bins": {"signal": "concat_0_layer_1_bin_maxbins_10_IMDB_Rating_bins"},
      "zero": false
    },
    {
      "name": "concat_0_y",
      "type": "linear",
      "domain": {
        "signal": "[concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins.start, concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins.stop]"
      },
      "range": [{"signal": "concat_0_height"}, 0],
      "bins": {
        "signal": "concat_0_layer_1_bin_maxbins_10_Rotten_Tomatoes_Rating_bins"
      },
      "zero": false
    },
    {
      "name": "concat_1_x",
      "type": "band",
      "domain": {"data": "data_3", "field": "Major_Genre", "sort": true},
      "range": [0, {"signal": "concat_1_width"}],
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    },
    {
      "name": "concat_1_y",
      "type": "linear",
      "domain": {"data": "data_3", "field": "__count"},
      "range": [{"signal": "concat_1_height"}, 0],
      "nice": true,
      "zero": true
    }
  ]
}
