digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> animal<br/><font color="grey" point-size="10">OUT:</font> emoji>;
    tooltip = "[45]&#010;Calculate {as:emoji,calculate:{'cattle': 'üêÑ', 'pigs': 'üêñ', 'sheep': 'üêè'}[datum.animal]}"
  ]
  "46" [
    label = <WindowTransform<br/><font color="grey" point-size="10">IN:</font> country, animal<br/><font color="grey" point-size="10">OUT:</font> rank>;
    tooltip = "[46]&#010;WindowTransform {groupby:[country,animal],window:[{as:rank,op:rank}]}"
  ]
  "47" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> country>;
    tooltip = "[51]&#010;Facet r:{fields:[country],name:row_domain}"
  ]
  "52" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[52]&#010;Identifier"
  ]
  "53" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "49" "49" -> "51" "51" -> "52" "52" -> "53" "53" -> "55"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> animal<br/><font color="grey" point-size="10">OUT:</font> emoji>;
    tooltip = "[45]&#010;Calculate {as:emoji,calculate:{'cattle': 'üêÑ', 'pigs': 'üêñ', 'sheep': 'üêè'}[datum.animal]}"
  ]
  "46" [
    label = <WindowTransform<br/><font color="grey" point-size="10">IN:</font> country, animal<br/><font color="grey" point-size="10">OUT:</font> rank>;
    tooltip = "[46]&#010;WindowTransform {groupby:[country,animal],window:[{as:rank,op:rank}]}"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> country>;
    tooltip = "[51]&#010;Facet r:{fields:[country],name:row_domain}"
  ]
  "55" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[55]&#010;Output 56"
  ]
  "58" [
    label = <Output<br/><i>clone_child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[58]&#010;Output 57"
  ]

  "43" -> "45" "45" -> "46" "46" -> "49" "49" -> "58" "58" -> "51" "51" -> "55"
}
{ data: 'scale_child_main', field: 'rank', sort: true }
{ data: 'scale_child_main', field: 'animal' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "values": [
        {"country": "Great Britain", "animal": "pigs"},
        {"country": "Great Britain", "animal": "pigs"},
        {"country": "Great Britain", "animal": "cattle"},
        {"country": "Great Britain", "animal": "cattle"},
        {"country": "Great Britain", "animal": "cattle"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "Great Britain", "animal": "sheep"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "pigs"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "cattle"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"},
        {"country": "United States", "animal": "sheep"}
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "formula",
          "expr": "{'cattle': 'üêÑ', 'pigs': 'üêñ', 'sheep': 'üêè'}[datum.animal]",
          "as": "emoji"
        },
        {
          "type": "window",
          "params": [null],
          "as": ["rank"],
          "ops": ["rank"],
          "fields": [null],
          "sort": {"field": [], "order": []},
          "groupby": ["country", "animal"]
        }
      ]
    },
    {
      "name": "row_domain",
      "source": "data_0",
      "transform": [{"type": "aggregate", "groupby": ["country"]}]
    }
  ],
  "signals": [
    {"name": "child_width", "value": 800},
    {"name": "child_height", "value": 200}
  ],
  "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "all"},
  "marks": [
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "from": {"data": "row_domain"},
      "sort": {"field": "datum[\"country\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "isValid(parent[\"country\"]) ? parent[\"country\"] : \"\"+parent[\"country\"]"
        },
        "orient": "left",
        "style": "guide-label",
        "frame": "group",
        "offset": 10
      },
      "encode": {"update": {"height": {"signal": "child_height"}}}
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {"name": "facet", "data": "data_0", "groupby": ["country"]}
      },
      "sort": {"field": ["datum[\"country\"]"], "order": ["ascending"]},
      "encode": {
        "update": {
          "width": {"signal": "child_width"},
          "height": {"signal": "child_height"}
        }
      },
      "marks": [
        {
          "name": "child_marks",
          "type": "text",
          "style": ["text"],
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "baseline": {"value": "middle"},
              "fill": {"value": "black"},
              "x": {"scale": "x", "field": "rank"},
              "y": {"scale": "y", "field": "animal"},
              "text": {
                "signal": "isValid(datum[\"emoji\"]) ? datum[\"emoji\"] : \"\"+datum[\"emoji\"]"
              },
              "fontSize": {"value": 65},
              "align": {"value": "center"}
            }
          }
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "point",
      "domain": {"data": "data_0", "field": "rank", "sort": true},
      "range": [0, {"signal": "child_width"}],
      "padding": 0.5
    },
    {
      "name": "y",
      "type": "point",
      "domain": {"data": "data_0", "field": "animal"},
      "range": [0, {"signal": "child_height"}],
      "padding": 0.5
    }
  ],
  "config": {"style": {"cell": {"stroke": ""}}}
}
