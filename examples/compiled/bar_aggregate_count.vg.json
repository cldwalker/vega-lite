digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/seattle-weather.csv</i>>;
    tooltip = "[43]&#010;data/seattle-weather.csv"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> precipitation<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_precipitation, bin_maxbins_10_precipitation_end>;
    tooltip = "[45]&#010;Bin -1099815405"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_precipitation, bin_maxbins_10_precipitation_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[48]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_precipitation\,\bin_maxbins_10_precipitation_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "49" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> precipitation>;
    tooltip = "[49]&#010;FilterInvalid {precipitation:{bin:{maxbins:10},field:precipitation,type:quantitative}}"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "49" "49" -> "50"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/seattle-weather.csv</i>>;
    tooltip = "[43]&#010;data/seattle-weather.csv"
  ]
  "45" [
    label = <Bin<br/><font color="grey" point-size="10">IN:</font> precipitation<br/><font color="grey" point-size="10">OUT:</font> bin_maxbins_10_precipitation, bin_maxbins_10_precipitation_end>;
    tooltip = "[45]&#010;Bin -1099815405"
  ]
  "48" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> bin_maxbins_10_precipitation, bin_maxbins_10_precipitation_end, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[48]&#010;Aggregate {dimensions:Set(\bin_maxbins_10_precipitation\,\bin_maxbins_10_precipitation_end\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "49" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> precipitation>;
    tooltip = "[49]&#010;FilterInvalid {precipitation:{bin:{maxbins:10},field:precipitation,type:quantitative}}"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]

  "43" -> "45" "45" -> "48" "48" -> "49" "49" -> "50"
}
SignalRefWrapper { signal: [Getter] }
{ data: 'main', field: '__count' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/seattle-weather.csv",
      "format": {"type": "csv"},
      "transform": [
        {
          "type": "extent",
          "field": "precipitation",
          "signal": "bin_maxbins_10_precipitation_extent"
        },
        {
          "type": "bin",
          "field": "precipitation",
          "as": [
            "bin_maxbins_10_precipitation",
            "bin_maxbins_10_precipitation_end"
          ],
          "signal": "bin_maxbins_10_precipitation_bins",
          "extent": {"signal": "bin_maxbins_10_precipitation_extent"},
          "maxbins": 10
        },
        {
          "type": "aggregate",
          "groupby": [
            "bin_maxbins_10_precipitation",
            "bin_maxbins_10_precipitation_end"
          ],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"bin_maxbins_10_precipitation\"]) && isFinite(+datum[\"bin_maxbins_10_precipitation\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "rect",
      "style": ["bar"],
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "fill": {"value": "#4c78a8"},
          "x2": [
            {
              "test": "!isValid(datum[\"bin_maxbins_10_precipitation\"]) || !isFinite(+datum[\"bin_maxbins_10_precipitation\"])",
              "value": 0
            },
            {"scale": "x", "field": "bin_maxbins_10_precipitation", "offset": 1}
          ],
          "x": [
            {
              "test": "!isValid(datum[\"bin_maxbins_10_precipitation\"]) || !isFinite(+datum[\"bin_maxbins_10_precipitation\"])",
              "value": 0
            },
            {"scale": "x", "field": "bin_maxbins_10_precipitation_end"}
          ],
          "y": {"scale": "y", "field": "__count"},
          "y2": {"scale": "y", "value": 0}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {
        "signal": "[bin_maxbins_10_precipitation_bins.start, bin_maxbins_10_precipitation_bins.stop]"
      },
      "range": [0, {"signal": "width"}],
      "bins": {"signal": "bin_maxbins_10_precipitation_bins"},
      "zero": false
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "__count"},
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "axes": [
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "precipitation (binned)",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/10)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Count of Records",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ]
}
