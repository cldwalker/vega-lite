{ data: 'child_layer_0_main', field: 'age', sort: true }
{ data: 'child_layer_1_main', field: 'age', sort: true }
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "47" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[51]&#010;Facet c:{fields:[gender],name:column_domain}"
  ]
  "52" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[52]&#010;Identifier"
  ]
  "53" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[55]&#010;Output 56"
  ]
  "57" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[57]&#010;Identifier"
  ]
  "58" [
    label = <Output<br/><i>child_layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[58]&#010;Output 59"
  ]
  "60" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[60]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "61" [
    label = <Output<br/><i>child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]
  "63" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[63]&#010;Identifier"
  ]
  "64" [
    label = <Output<br/><i>child_layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[64]&#010;Output 65"
  ]
  "66" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[66]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "67" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[67]&#010;FilterInvalid {people:{aggregate:sum,axis:{title:population},field:people,type:quantitative}}"
  ]
  "68" [
    label = <Output<br/><i>child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[68]&#010;Output 69"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "49" "49" -> "51" "51" -> "52" "52" -> "53" "53" -> "55" "55" -> "57" "57" -> "58" "58" -> "60" "60" -> "61" "55" -> "63" "63" -> "64" "64" -> "66" "66" -> "67" "67" -> "68"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[51]&#010;Facet c:{fields:[gender],name:column_domain}"
  ]
  "61" [
    label = <Output<br/><i>child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]
  "66" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[66]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "67" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[67]&#010;FilterInvalid {people:{aggregate:sum,axis:{title:population},field:people,type:quantitative}}"
  ]
  "68" [
    label = <Output<br/><i>child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[68]&#010;Output 69"
  ]
  "72" [
    label = <Output<br/><i>clone_child_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[72]&#010;Output 70"
  ]
  "73" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[73]&#010;FilterInvalid {people:{aggregate:sum,axis:{title:population},field:people,type:quantitative}}"
  ]
  "74" [
    label = <Output<br/><i>clone_child_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[74]&#010;Output 71"
  ]

  "43" -> "45" "45" -> "46" "46" -> "66" "66" -> "49" "49" -> "72" "72" -> "51" "51" -> "61" "61" -> "67" "67" -> "68" "72" -> "73" "73" -> "74"
}
{ data: 'child_layer_0_main', field: 'age', sort: true }
{ data: 'child_layer_1_main', field: 'age', sort: true }
{ data: 'child_layer_0_main', field: 'age', sort: true }
{ data: 'child_layer_1_main', field: 'age', sort: true }
{ data: 'child_layer_0_main', field: 'age', sort: true }
{ data: 'child_layer_1_main', field: 'age', sort: true }
{ data: 'facet', field: 'age', sort: true }
{ data: 'data_0', field: 'age', sort: true }
{ data: 'facet', field: 'age', sort: true }
{ data: 'data_0', field: 'age', sort: true }
{ data: 'scale_child_layer_0_main', field: 'sum_people' }
{ data: 'scale_child_layer_1_main', field: 'sum_people' }
{ data: 'scale_child_layer_0_main', field: 'gender', sort: true }
{ data: 'scale_child_layer_1_main', field: 'gender', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A trellis bar chart showing the US population distribution of age groups and gender in 2000.",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "url": "data/population.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "filter", "expr": "datum.year == 2000"},
        {
          "type": "formula",
          "expr": "datum.sex == 2 ? 'Female' : 'Male'",
          "as": "gender"
        },
        {
          "type": "aggregate",
          "groupby": ["age", "gender"],
          "ops": ["sum"],
          "fields": ["people"],
          "as": ["sum_people"]
        }
      ]
    },
    {
      "name": "column_domain",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["gender"],
          "fields": ["age"],
          "ops": ["distinct"],
          "as": ["distinct_age"]
        }
      ]
    },
    {
      "name": "data_2",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "child_x_step", "value": 17},
    {"name": "child_height", "value": 200}
  ],
  "layout": {
    "padding": 20,
    "offset": {"columnTitle": 10},
    "columns": {"signal": "length(data('column_domain'))"},
    "bounds": "full",
    "align": "none"
  },
  "marks": [
    {
      "name": "column-title",
      "type": "group",
      "role": "column-title",
      "title": {"text": "gender", "style": "guide-title", "offset": 10}
    },
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "encode": {"update": {"height": {"signal": "child_height"}}},
      "axes": [
        {
          "scale": "y",
          "orient": "left",
          "grid": false,
          "title": "population",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "column_header",
      "type": "group",
      "role": "column-header",
      "from": {"data": "column_domain"},
      "sort": {"field": "datum[\"gender\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "isValid(parent[\"gender\"]) ? parent[\"gender\"] : \"\"+parent[\"gender\"]"
        },
        "style": "guide-label",
        "frame": "group",
        "offset": 10
      },
      "encode": {
        "update": {
          "width": {
            "signal": "bandspace(datum[\"distinct_age\"], 1, 0.5) * child_x_step"
          }
        }
      }
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {
          "name": "facet",
          "data": "source_0",
          "groupby": ["gender"],
          "aggregate": {
            "fields": ["age"],
            "ops": ["distinct"],
            "as": ["distinct_age"]
          }
        }
      },
      "sort": {"field": ["datum[\"gender\"]"], "order": ["ascending"]},
      "data": [
        {
          "source": "facet",
          "name": "data_0",
          "transform": [
            {
              "type": "filter",
              "expr": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
            }
          ]
        }
      ],
      "encode": {
        "update": {
          "width": {
            "signal": "bandspace(datum[\"distinct_age\"], 1, 0.5) * child_x_step"
          },
          "height": {"signal": "child_height"}
        }
      },
      "marks": [
        {
          "name": "child_layer_0_pathgroup",
          "type": "group",
          "from": {
            "facet": {
              "name": "faceted_path_child_layer_0_main",
              "data": "facet",
              "groupby": ["gender"]
            }
          },
          "encode": {
            "update": {
              "width": {"field": {"group": "width"}},
              "height": {"field": {"group": "height"}}
            }
          },
          "marks": [
            {
              "name": "child_layer_0_marks",
              "type": "line",
              "style": ["line"],
              "sort": {"field": "datum[\"age\"]"},
              "from": {"data": "faceted_path_child_layer_0_main"},
              "encode": {
                "update": {
                  "stroke": {"scale": "color", "field": "gender"},
                  "x": {"scale": "child_x", "field": "age"},
                  "y": {"scale": "y", "field": "sum_people"},
                  "defined": {
                    "signal": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
                  }
                }
              }
            }
          ]
        },
        {
          "name": "child_layer_1_marks",
          "type": "symbol",
          "style": ["point"],
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "fill": {"value": "transparent"},
              "stroke": {"scale": "color", "field": "gender"},
              "x": {"scale": "child_x", "field": "age"},
              "y": {"scale": "y", "field": "sum_people"}
            }
          }
        }
      ],
      "scales": [
        {
          "name": "child_x",
          "type": "point",
          "domain": {
            "fields": [
              {"data": "facet", "field": "age"},
              {"data": "data_0", "field": "age"}
            ],
            "sort": true
          },
          "range": {"step": {"signal": "child_x_step"}},
          "padding": 0.5
        }
      ],
      "axes": [
        {
          "scale": "y",
          "orient": "left",
          "gridScale": "child_x",
          "grid": true,
          "tickCount": {"signal": "ceil(child_height/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child_x",
          "orient": "bottom",
          "grid": false,
          "title": "age",
          "labelAlign": "right",
          "labelAngle": 270,
          "labelBaseline": "middle",
          "labelOverlap": true,
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "sum_people"},
          {"data": "data_2", "field": "sum_people"}
        ]
      },
      "range": [{"signal": "child_height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "gender"},
          {"data": "data_2", "field": "gender"}
        ],
        "sort": true
      },
      "range": ["#675193", "#ca8861"]
    }
  ],
  "legends": [
    {
      "stroke": "color",
      "symbolType": "circle",
      "title": "gender",
      "encode": {"symbols": {"update": {"fill": {"value": "transparent"}}}}
    }
  ],
  "config": {"style": {"cell": {"fill": "yellow"}}}
}
