digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> data<br/><font color="grey" point-size="10">OUT:</font> data_start, data_end>;
    tooltip = "[52]&#010;Stack {as:[data_start,data_end],facetby:[],impute:false,offset:zero,sort:{field:[data],order:[ascending]},stackField:data,stackby:[data]}"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> data>;
    tooltip = "[53]&#010;FilterInvalid {data:{field:data,scale:{range:[20,100],type:sqrt,zero:true},type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "56" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[56]&#010;Identifier"
  ]
  "57" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[57]&#010;Output 58"
  ]
  "59" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> data<br/><font color="grey" point-size="10">OUT:</font> data_start, data_end>;
    tooltip = "[59]&#010;Stack {as:[data_start,data_end],facetby:[],impute:false,offset:zero,sort:{field:[data,data],order:[ascending,ascending]},stackField:data,stackby:[data,data]}"
  ]
  "60" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> data>;
    tooltip = "[60]&#010;FilterInvalid {data:{field:data,scale:{range:[20,100],type:sqrt,zero:true},type:quantitative}}"
  ]
  "61" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "52" "52" -> "53" "53" -> "54" "47" -> "56" "56" -> "57" "57" -> "59" "59" -> "60" "60" -> "61"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "52" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> data<br/><font color="grey" point-size="10">OUT:</font> data_start, data_end>;
    tooltip = "[52]&#010;Stack {as:[data_start,data_end],facetby:[],impute:false,offset:zero,sort:{field:[data],order:[ascending]},stackField:data,stackby:[data]}"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> data>;
    tooltip = "[53]&#010;FilterInvalid {data:{field:data,scale:{range:[20,100],type:sqrt,zero:true},type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "59" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> data<br/><font color="grey" point-size="10">OUT:</font> data_start, data_end>;
    tooltip = "[59]&#010;Stack {as:[data_start,data_end],facetby:[],impute:false,offset:zero,sort:{field:[data,data],order:[ascending,ascending]},stackField:data,stackby:[data,data]}"
  ]
  "60" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> data>;
    tooltip = "[60]&#010;FilterInvalid {data:{field:data,scale:{range:[20,100],type:sqrt,zero:true},type:quantitative}}"
  ]
  "61" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]

  "43" -> "52" "52" -> "53" "53" -> "54" "43" -> "59" "59" -> "60" "60" -> "61"
}
{ data: 'layer_0_main', field: 'data_start' }
{ data: 'layer_0_main', field: 'data_end' }
{ data: 'layer_1_main', field: 'data_start' }
{ data: 'layer_1_main', field: 'data_end' }
{ data: 'layer_0_main', field: 'data' }
{ data: 'layer_1_main', field: 'data' }
{ data: 'layer_0_main', field: 'data', sort: true }
{ data: 'layer_1_main', field: 'data', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A simple radial chart with embedded data.",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "encode": {"update": {"stroke": {"value": null}}},
  "data": [
    {"name": "source_0", "values": [12, 23, 47, 6, 52, 19]},
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "stack",
          "groupby": [],
          "field": "data",
          "sort": {"field": ["data"], "order": ["ascending"]},
          "as": ["data_start", "data_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"data\"]) && isFinite(+datum[\"data\"])"
        }
      ]
    },
    {
      "name": "data_2",
      "source": "source_0",
      "transform": [
        {
          "type": "stack",
          "groupby": [],
          "field": "data",
          "sort": {
            "field": ["data", "data"],
            "order": ["ascending", "ascending"]
          },
          "as": ["data_start", "data_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"data\"]) && isFinite(+datum[\"data\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "arc",
      "style": ["arc"],
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "stroke": {"value": "#fff"},
          "innerRadius": {"value": 20},
          "fill": {"scale": "color", "field": "data"},
          "x": {"signal": "width", "mult": 0.5},
          "y": {"signal": "height", "mult": 0.5},
          "outerRadius": {"scale": "radius", "field": "data"},
          "startAngle": {"scale": "theta", "field": "data_end"},
          "endAngle": {"scale": "theta", "field": "data_start"}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "text",
      "style": ["text"],
      "from": {"data": "data_2"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "data"},
          "x": {"signal": "width", "mult": 0.5},
          "y": {"signal": "height", "mult": 0.5},
          "text": {"signal": "format(datum[\"data\"], \"\")"},
          "align": {"value": "center"},
          "baseline": {"value": "middle"},
          "radius": {"scale": "radius", "field": "data", "offset": 10},
          "theta": {
            "signal": "scale(\"theta\", 0.5 * datum[\"data_start\"] + 0.5 * datum[\"data_end\"])"
          }
        }
      }
    }
  ],
  "scales": [
    {
      "name": "theta",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_1", "field": "data_start"},
          {"data": "data_1", "field": "data_end"},
          {"data": "data_2", "field": "data_start"},
          {"data": "data_2", "field": "data_end"}
        ]
      },
      "range": [0, 6.283185307179586],
      "zero": true
    },
    {
      "name": "radius",
      "type": "sqrt",
      "domain": {
        "fields": [
          {"data": "data_1", "field": "data"},
          {"data": "data_2", "field": "data"}
        ]
      },
      "range": [20, 100],
      "zero": true
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "data_1", "field": "data"},
          {"data": "data_2", "field": "data"}
        ],
        "sort": true
      },
      "range": "category"
    }
  ]
}
