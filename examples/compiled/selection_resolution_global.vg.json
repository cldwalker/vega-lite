digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Miles_per_Gallon_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon, Horsepower>;
    tooltip = "[52]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "53" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Filter>;
    tooltip = "[55]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "56" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Miles_per_Gallon_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[58]&#010;Identifier"
  ]
  "59" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Acceleration_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Acceleration, Horsepower>;
    tooltip = "[61]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Horsepower:{field:Horsepower,type:quantitative}}"
  ]
  "62" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[62]&#010;Output 63"
  ]
  "64" [
    label = <Filter>;
    tooltip = "[64]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "65" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Acceleration_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[65]&#010;Output 66"
  ]
  "67" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[67]&#010;Identifier"
  ]
  "68" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Horsepower_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[68]&#010;Output 69"
  ]
  "70" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[70]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative}}"
  ]
  "71" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[71]&#010;Output 72"
  ]
  "73" [
    label = <Filter>;
    tooltip = "[73]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "74" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Horsepower_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[74]&#010;Output 75"
  ]
  "76" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[76]&#010;Identifier"
  ]
  "77" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Miles_per_Gallon_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[77]&#010;Output 78"
  ]
  "79" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon, Acceleration>;
    tooltip = "[79]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "80" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[80]&#010;Output 81"
  ]
  "82" [
    label = <Filter>;
    tooltip = "[82]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "83" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Miles_per_Gallon_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[83]&#010;Output 84"
  ]
  "85" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[85]&#010;Identifier"
  ]
  "86" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Acceleration_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[86]&#010;Output 87"
  ]
  "88" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Acceleration>;
    tooltip = "[88]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative}}"
  ]
  "89" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[89]&#010;Output 90"
  ]
  "91" [
    label = <Filter>;
    tooltip = "[91]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "92" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Acceleration_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[92]&#010;Output 93"
  ]
  "94" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[94]&#010;Identifier"
  ]
  "95" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Horsepower_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[95]&#010;Output 96"
  ]
  "97" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Acceleration>;
    tooltip = "[97]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Horsepower:{field:Horsepower,type:quantitative}}"
  ]
  "98" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[98]&#010;Output 99"
  ]
  "100" [
    label = <Filter>;
    tooltip = "[100]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "101" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Horsepower_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[101]&#010;Output 102"
  ]
  "103" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[103]&#010;Identifier"
  ]
  "104" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Miles_per_Gallon_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[104]&#010;Output 105"
  ]
  "106" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon>;
    tooltip = "[106]&#010;FilterInvalid {Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "107" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[107]&#010;Output 108"
  ]
  "109" [
    label = <Filter>;
    tooltip = "[109]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "110" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Miles_per_Gallon_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[110]&#010;Output 111"
  ]
  "112" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[112]&#010;Identifier"
  ]
  "113" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Acceleration_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[113]&#010;Output 114"
  ]
  "115" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Acceleration, Miles_per_Gallon>;
    tooltip = "[115]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "116" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[116]&#010;Output 117"
  ]
  "118" [
    label = <Filter>;
    tooltip = "[118]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "119" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Acceleration_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[119]&#010;Output 120"
  ]
  "121" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[121]&#010;Identifier"
  ]
  "122" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Horsepower_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[122]&#010;Output 123"
  ]
  "124" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Miles_per_Gallon>;
    tooltip = "[124]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "125" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[125]&#010;Output 126"
  ]
  "127" [
    label = <Filter>;
    tooltip = "[127]&#010;Filter !(length(data(brush_store))) || (vlSelectionTest(brush_store, datum))"
  ]
  "128" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Horsepower_lookup_brush</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[128]&#010;Output 129"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "47" -> "58" "58" -> "59" "59" -> "61" "61" -> "62" "62" -> "64" "64" -> "65" "47" -> "67" "67" -> "68" "68" -> "70" "70" -> "71" "71" -> "73" "73" -> "74" "47" -> "76" "76" -> "77" "77" -> "79" "79" -> "80" "80" -> "82" "82" -> "83" "47" -> "85" "85" -> "86" "86" -> "88" "88" -> "89" "89" -> "91" "91" -> "92" "47" -> "94" "94" -> "95" "95" -> "97" "97" -> "98" "98" -> "100" "100" -> "101" "47" -> "103" "103" -> "104" "104" -> "106" "106" -> "107" "107" -> "109" "109" -> "110" "47" -> "112" "112" -> "113" "113" -> "115" "115" -> "116" "116" -> "118" "118" -> "119" "47" -> "121" "121" -> "122" "122" -> "124" "124" -> "125" "125" -> "127" "127" -> "128"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "52" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon, Horsepower>;
    tooltip = "[52]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "53" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]
  "61" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Acceleration, Horsepower>;
    tooltip = "[61]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Horsepower:{field:Horsepower,type:quantitative}}"
  ]
  "62" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[62]&#010;Output 63"
  ]
  "70" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower>;
    tooltip = "[70]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative}}"
  ]
  "71" [
    label = <Output<br/><i>child__row_Horsepowercolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[71]&#010;Output 72"
  ]
  "79" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon, Acceleration>;
    tooltip = "[79]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "80" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[80]&#010;Output 81"
  ]
  "88" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Acceleration>;
    tooltip = "[88]&#010;FilterInvalid {Acceleration:{field:Acceleration,type:quantitative}}"
  ]
  "89" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[89]&#010;Output 90"
  ]
  "98" [
    label = <Output<br/><i>child__row_Accelerationcolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[98]&#010;Output 99"
  ]
  "106" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Miles_per_Gallon>;
    tooltip = "[106]&#010;FilterInvalid {Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "107" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Miles_per_Gallon_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[107]&#010;Output 108"
  ]
  "116" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Acceleration_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[116]&#010;Output 117"
  ]
  "125" [
    label = <Output<br/><i>child__row_Miles_per_Galloncolumn_Horsepower_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[125]&#010;Output 126"
  ]

  "43" -> "52" "52" -> "125" "125" -> "53" "43" -> "61" "61" -> "98" "98" -> "62" "43" -> "70" "70" -> "71" "43" -> "79" "79" -> "116" "116" -> "80" "43" -> "88" "88" -> "89" "43" -> "106" "106" -> "107"
}
{
  data: 'child__row_Horsepowercolumn_Miles_per_Gallon_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Horsepowercolumn_Acceleration_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Horsepowercolumn_Horsepower_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Accelerationcolumn_Miles_per_Gallon_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Accelerationcolumn_Acceleration_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Accelerationcolumn_Horsepower_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Miles_per_Galloncolumn_Miles_per_Gallon_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Miles_per_Galloncolumn_Acceleration_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Miles_per_Galloncolumn_Horsepower_main',
  field: 'Origin',
  sort: true
}
{
  data: 'child__row_Horsepowercolumn_Miles_per_Gallon_main',
  field: 'Miles_per_Gallon'
}
{
  data: 'child__row_Horsepowercolumn_Miles_per_Gallon_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Horsepowercolumn_Acceleration_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Horsepowercolumn_Acceleration_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Horsepowercolumn_Horsepower_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Horsepowercolumn_Horsepower_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Accelerationcolumn_Miles_per_Gallon_main',
  field: 'Miles_per_Gallon'
}
{
  data: 'child__row_Accelerationcolumn_Miles_per_Gallon_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Accelerationcolumn_Acceleration_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Accelerationcolumn_Acceleration_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Accelerationcolumn_Horsepower_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Accelerationcolumn_Horsepower_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Miles_per_Gallon_main',
  field: 'Miles_per_Gallon'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Miles_per_Gallon_main',
  field: 'Miles_per_Gallon'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Acceleration_main',
  field: 'Acceleration'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Acceleration_main',
  field: 'Miles_per_Gallon'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Horsepower_main',
  field: 'Horsepower'
}
{
  data: 'child__row_Miles_per_Galloncolumn_Horsepower_main',
  field: 'Miles_per_Gallon'
}
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "data": [
    {"name": "brush_store"},
    {"name": "source_0", "url": "data/cars.json", "format": {"type": "json"}},
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"]) && isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Acceleration\"]) && isFinite(+datum[\"Acceleration\"]) && isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"])"
        }
      ]
    },
    {
      "name": "data_2",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"])"
        }
      ]
    },
    {
      "name": "data_3",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"]) && isValid(datum[\"Acceleration\"]) && isFinite(+datum[\"Acceleration\"])"
        }
      ]
    },
    {
      "name": "data_4",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Acceleration\"]) && isFinite(+datum[\"Acceleration\"])"
        }
      ]
    },
    {
      "name": "data_5",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "childWidth", "value": 200},
    {"name": "childHeight", "value": 200},
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "brush",
      "update": "vlSelectionResolve(\"brush_store\", \"union\")"
    }
  ],
  "layout": {"padding": 20, "columns": 3, "bounds": "full", "align": "all"},
  "marks": [
    {
      "type": "group",
      "name": "child__row_Horsepowercolumn_Miles_per_Gallon_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Horsepowercolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[0]), scale(\"child__row_Horsepowercolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Miles_per_Gallon",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Horsepowercolumn_Miles_per_Gallon_y\", brush_Horsepower[0]), scale(\"child__row_Horsepowercolumn_Miles_per_Gallon_y\", brush_Horsepower[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Horsepower",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Horsepowercolumn_Miles_per_Gallon_x"},
                {"scale": "child__row_Horsepowercolumn_Miles_per_Gallon_y"}
              ],
              "update": "(!isArray(brush_Miles_per_Gallon) || (+invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_x\", brush_x)[0] === +brush_Miles_per_Gallon[0] && +invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_x\", brush_x)[1] === +brush_Miles_per_Gallon[1])) && (!isArray(brush_Horsepower) || (+invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_y\", brush_y)[0] === +brush_Horsepower[0] && +invert(\"child__row_Horsepowercolumn_Miles_per_Gallon_y\", brush_y)[1] === +brush_Horsepower[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [
                {"signal": "brush_Miles_per_Gallon || brush_Horsepower"}
              ],
              "update": "brush_Miles_per_Gallon && brush_Horsepower ? {unit: \"child__row_Horsepowercolumn_Miles_per_Gallon\", fields: brush_tuple_fields, values: [brush_Miles_per_Gallon,brush_Horsepower]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Miles_per_Gallon", "channel": "x", "type": "R"},
            {"field": "Horsepower", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Horsepowercolumn_Miles_per_Gallon_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_x",
                "field": "Miles_per_Gallon"
              },
              "y": {
                "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_y",
                "field": "Horsepower"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "gridScale": "child__row_Horsepowercolumn_Miles_per_Gallon_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_y",
          "orient": "left",
          "gridScale": "child__row_Horsepowercolumn_Miles_per_Gallon_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Miles_per_Gallon_y",
          "orient": "left",
          "grid": false,
          "title": "Horsepower",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Horsepowercolumn_Acceleration_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Horsepowercolumn_Acceleration_x\", brush_Acceleration[0]), scale(\"child__row_Horsepowercolumn_Acceleration_x\", brush_Acceleration[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Acceleration",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Horsepowercolumn_Acceleration_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Horsepowercolumn_Acceleration_y\", brush_Horsepower[0]), scale(\"child__row_Horsepowercolumn_Acceleration_y\", brush_Horsepower[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Horsepower",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Horsepowercolumn_Acceleration_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Horsepowercolumn_Acceleration_x"},
                {"scale": "child__row_Horsepowercolumn_Acceleration_y"}
              ],
              "update": "(!isArray(brush_Acceleration) || (+invert(\"child__row_Horsepowercolumn_Acceleration_x\", brush_x)[0] === +brush_Acceleration[0] && +invert(\"child__row_Horsepowercolumn_Acceleration_x\", brush_x)[1] === +brush_Acceleration[1])) && (!isArray(brush_Horsepower) || (+invert(\"child__row_Horsepowercolumn_Acceleration_y\", brush_y)[0] === +brush_Horsepower[0] && +invert(\"child__row_Horsepowercolumn_Acceleration_y\", brush_y)[1] === +brush_Horsepower[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Acceleration || brush_Horsepower"}],
              "update": "brush_Acceleration && brush_Horsepower ? {unit: \"child__row_Horsepowercolumn_Acceleration\", fields: brush_tuple_fields, values: [brush_Acceleration,brush_Horsepower]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Acceleration", "channel": "x", "type": "R"},
            {"field": "Horsepower", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Horsepowercolumn_Acceleration_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Horsepowercolumn_Acceleration_x",
                "field": "Acceleration"
              },
              "y": {
                "scale": "child__row_Horsepowercolumn_Acceleration_y",
                "field": "Horsepower"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Acceleration\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Horsepowercolumn_Acceleration_x",
          "orient": "bottom",
          "gridScale": "child__row_Horsepowercolumn_Acceleration_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Acceleration_y",
          "orient": "left",
          "gridScale": "child__row_Horsepowercolumn_Acceleration_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Acceleration_x",
          "orient": "bottom",
          "grid": false,
          "title": "Acceleration",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Acceleration_y",
          "orient": "left",
          "grid": false,
          "title": "Horsepower",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Horsepowercolumn_Horsepower_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Horsepowercolumn_Horsepower_x\", brush_Horsepower[0]), scale(\"child__row_Horsepowercolumn_Horsepower_x\", brush_Horsepower[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Horsepower",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Horsepowercolumn_Horsepower_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [{"scale": "child__row_Horsepowercolumn_Horsepower_x"}],
              "update": "(!isArray(brush_Horsepower) || (+invert(\"child__row_Horsepowercolumn_Horsepower_x\", brush_x)[0] === +brush_Horsepower[0] && +invert(\"child__row_Horsepowercolumn_Horsepower_x\", brush_x)[1] === +brush_Horsepower[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Horsepower"}],
              "update": "brush_Horsepower ? {unit: \"child__row_Horsepowercolumn_Horsepower\", fields: brush_tuple_fields, values: [brush_Horsepower]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [{"field": "Horsepower", "channel": "x", "type": "R"}]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Horsepowercolumn_Horsepower_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_2"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Horsepowercolumn_Horsepower_x",
                "field": "Horsepower"
              },
              "y": {
                "scale": "child__row_Horsepowercolumn_Horsepower_y",
                "field": "Horsepower"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Horsepowercolumn_Horsepower\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {"test": "brush_x[0] !== brush_x[1]", "value": "white"},
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Horsepowercolumn_Horsepower_x",
          "orient": "bottom",
          "gridScale": "child__row_Horsepowercolumn_Horsepower_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Horsepower_y",
          "orient": "left",
          "gridScale": "child__row_Horsepowercolumn_Horsepower_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Horsepower_x",
          "orient": "bottom",
          "grid": false,
          "title": "Horsepower",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Horsepowercolumn_Horsepower_y",
          "orient": "left",
          "grid": false,
          "title": "Horsepower",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Accelerationcolumn_Miles_per_Gallon_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Accelerationcolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[0]), scale(\"child__row_Accelerationcolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Miles_per_Gallon",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Accelerationcolumn_Miles_per_Gallon_y\", brush_Acceleration[0]), scale(\"child__row_Accelerationcolumn_Miles_per_Gallon_y\", brush_Acceleration[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Acceleration",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Accelerationcolumn_Miles_per_Gallon_x"},
                {"scale": "child__row_Accelerationcolumn_Miles_per_Gallon_y"}
              ],
              "update": "(!isArray(brush_Miles_per_Gallon) || (+invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_x\", brush_x)[0] === +brush_Miles_per_Gallon[0] && +invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_x\", brush_x)[1] === +brush_Miles_per_Gallon[1])) && (!isArray(brush_Acceleration) || (+invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_y\", brush_y)[0] === +brush_Acceleration[0] && +invert(\"child__row_Accelerationcolumn_Miles_per_Gallon_y\", brush_y)[1] === +brush_Acceleration[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [
                {"signal": "brush_Miles_per_Gallon || brush_Acceleration"}
              ],
              "update": "brush_Miles_per_Gallon && brush_Acceleration ? {unit: \"child__row_Accelerationcolumn_Miles_per_Gallon\", fields: brush_tuple_fields, values: [brush_Miles_per_Gallon,brush_Acceleration]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Miles_per_Gallon", "channel": "x", "type": "R"},
            {"field": "Acceleration", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Accelerationcolumn_Miles_per_Gallon_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_3"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_x",
                "field": "Miles_per_Gallon"
              },
              "y": {
                "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_y",
                "field": "Acceleration"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Miles_per_Gallon\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "gridScale": "child__row_Accelerationcolumn_Miles_per_Gallon_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_y",
          "orient": "left",
          "gridScale": "child__row_Accelerationcolumn_Miles_per_Gallon_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Miles_per_Gallon_y",
          "orient": "left",
          "grid": false,
          "title": "Acceleration",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Accelerationcolumn_Acceleration_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Accelerationcolumn_Acceleration_x\", brush_Acceleration[0]), scale(\"child__row_Accelerationcolumn_Acceleration_x\", brush_Acceleration[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Acceleration",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Accelerationcolumn_Acceleration_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Accelerationcolumn_Acceleration_x"}
              ],
              "update": "(!isArray(brush_Acceleration) || (+invert(\"child__row_Accelerationcolumn_Acceleration_x\", brush_x)[0] === +brush_Acceleration[0] && +invert(\"child__row_Accelerationcolumn_Acceleration_x\", brush_x)[1] === +brush_Acceleration[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Acceleration"}],
              "update": "brush_Acceleration ? {unit: \"child__row_Accelerationcolumn_Acceleration\", fields: brush_tuple_fields, values: [brush_Acceleration]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [{"field": "Acceleration", "channel": "x", "type": "R"}]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Accelerationcolumn_Acceleration_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_4"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Accelerationcolumn_Acceleration_x",
                "field": "Acceleration"
              },
              "y": {
                "scale": "child__row_Accelerationcolumn_Acceleration_y",
                "field": "Acceleration"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Acceleration\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {"test": "brush_x[0] !== brush_x[1]", "value": "white"},
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Accelerationcolumn_Acceleration_x",
          "orient": "bottom",
          "gridScale": "child__row_Accelerationcolumn_Acceleration_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Acceleration_y",
          "orient": "left",
          "gridScale": "child__row_Accelerationcolumn_Acceleration_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Acceleration_x",
          "orient": "bottom",
          "grid": false,
          "title": "Acceleration",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Acceleration_y",
          "orient": "left",
          "grid": false,
          "title": "Acceleration",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Accelerationcolumn_Horsepower_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Accelerationcolumn_Horsepower_x\", brush_Horsepower[0]), scale(\"child__row_Accelerationcolumn_Horsepower_x\", brush_Horsepower[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Horsepower",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Accelerationcolumn_Horsepower_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Accelerationcolumn_Horsepower_y\", brush_Acceleration[0]), scale(\"child__row_Accelerationcolumn_Horsepower_y\", brush_Acceleration[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Acceleration",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Accelerationcolumn_Horsepower_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Accelerationcolumn_Horsepower_x"},
                {"scale": "child__row_Accelerationcolumn_Horsepower_y"}
              ],
              "update": "(!isArray(brush_Horsepower) || (+invert(\"child__row_Accelerationcolumn_Horsepower_x\", brush_x)[0] === +brush_Horsepower[0] && +invert(\"child__row_Accelerationcolumn_Horsepower_x\", brush_x)[1] === +brush_Horsepower[1])) && (!isArray(brush_Acceleration) || (+invert(\"child__row_Accelerationcolumn_Horsepower_y\", brush_y)[0] === +brush_Acceleration[0] && +invert(\"child__row_Accelerationcolumn_Horsepower_y\", brush_y)[1] === +brush_Acceleration[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Horsepower || brush_Acceleration"}],
              "update": "brush_Horsepower && brush_Acceleration ? {unit: \"child__row_Accelerationcolumn_Horsepower\", fields: brush_tuple_fields, values: [brush_Horsepower,brush_Acceleration]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Horsepower", "channel": "x", "type": "R"},
            {"field": "Acceleration", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Accelerationcolumn_Horsepower_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_1"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Accelerationcolumn_Horsepower_x",
                "field": "Horsepower"
              },
              "y": {
                "scale": "child__row_Accelerationcolumn_Horsepower_y",
                "field": "Acceleration"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Accelerationcolumn_Horsepower\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Accelerationcolumn_Horsepower_x",
          "orient": "bottom",
          "gridScale": "child__row_Accelerationcolumn_Horsepower_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Horsepower_y",
          "orient": "left",
          "gridScale": "child__row_Accelerationcolumn_Horsepower_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Horsepower_x",
          "orient": "bottom",
          "grid": false,
          "title": "Horsepower",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Accelerationcolumn_Horsepower_y",
          "orient": "left",
          "grid": false,
          "title": "Acceleration",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[0]), scale(\"child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x\", brush_Miles_per_Gallon[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Miles_per_Gallon",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x"
                }
              ],
              "update": "(!isArray(brush_Miles_per_Gallon) || (+invert(\"child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x\", brush_x)[0] === +brush_Miles_per_Gallon[0] && +invert(\"child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x\", brush_x)[1] === +brush_Miles_per_Gallon[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [{"signal": "brush_Miles_per_Gallon"}],
              "update": "brush_Miles_per_Gallon ? {unit: \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\", fields: brush_tuple_fields, values: [brush_Miles_per_Gallon]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [{"field": "Miles_per_Gallon", "channel": "x", "type": "R"}]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_5"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x",
                "field": "Miles_per_Gallon"
              },
              "y": {
                "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_y",
                "field": "Miles_per_Gallon"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "value": 0
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Miles_per_Gallon\"",
                  "field": {"group": "height"}
                },
                {"value": 0}
              ],
              "stroke": [
                {"test": "brush_x[0] !== brush_x[1]", "value": "white"},
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "gridScale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_y",
          "orient": "left",
          "gridScale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x",
          "orient": "bottom",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_y",
          "orient": "left",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Miles_per_Galloncolumn_Acceleration_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Miles_per_Galloncolumn_Acceleration_x\", brush_Acceleration[0]), scale(\"child__row_Miles_per_Galloncolumn_Acceleration_x\", brush_Acceleration[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Acceleration",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Miles_per_Galloncolumn_Acceleration_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Miles_per_Galloncolumn_Acceleration_y\", brush_Miles_per_Gallon[0]), scale(\"child__row_Miles_per_Galloncolumn_Acceleration_y\", brush_Miles_per_Gallon[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Miles_per_Gallon",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Miles_per_Galloncolumn_Acceleration_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Miles_per_Galloncolumn_Acceleration_x"},
                {"scale": "child__row_Miles_per_Galloncolumn_Acceleration_y"}
              ],
              "update": "(!isArray(brush_Acceleration) || (+invert(\"child__row_Miles_per_Galloncolumn_Acceleration_x\", brush_x)[0] === +brush_Acceleration[0] && +invert(\"child__row_Miles_per_Galloncolumn_Acceleration_x\", brush_x)[1] === +brush_Acceleration[1])) && (!isArray(brush_Miles_per_Gallon) || (+invert(\"child__row_Miles_per_Galloncolumn_Acceleration_y\", brush_y)[0] === +brush_Miles_per_Gallon[0] && +invert(\"child__row_Miles_per_Galloncolumn_Acceleration_y\", brush_y)[1] === +brush_Miles_per_Gallon[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [
                {"signal": "brush_Acceleration || brush_Miles_per_Gallon"}
              ],
              "update": "brush_Acceleration && brush_Miles_per_Gallon ? {unit: \"child__row_Miles_per_Galloncolumn_Acceleration\", fields: brush_tuple_fields, values: [brush_Acceleration,brush_Miles_per_Gallon]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Acceleration", "channel": "x", "type": "R"},
            {"field": "Miles_per_Gallon", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Miles_per_Galloncolumn_Acceleration_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_3"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Miles_per_Galloncolumn_Acceleration_x",
                "field": "Acceleration"
              },
              "y": {
                "scale": "child__row_Miles_per_Galloncolumn_Acceleration_y",
                "field": "Miles_per_Gallon"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Acceleration\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Miles_per_Galloncolumn_Acceleration_x",
          "orient": "bottom",
          "gridScale": "child__row_Miles_per_Galloncolumn_Acceleration_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Acceleration_y",
          "orient": "left",
          "gridScale": "child__row_Miles_per_Galloncolumn_Acceleration_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Acceleration_x",
          "orient": "bottom",
          "grid": false,
          "title": "Acceleration",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Acceleration_y",
          "orient": "left",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "child__row_Miles_per_Galloncolumn_Horsepower_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "childWidth"},
          "height": {"signal": "childHeight"}
        }
      },
      "signals": [
        {
          "name": "brush_x",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[x(unit), x(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_x[0], clamp(x(unit), 0, childWidth)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Miles_per_Galloncolumn_Horsepower_x\", brush_Horsepower[0]), scale(\"child__row_Miles_per_Galloncolumn_Horsepower_x\", brush_Horsepower[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, childWidth)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, childWidth)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Horsepower",
          "on": [
            {
              "events": {"signal": "brush_x"},
              "update": "brush_x[0] === brush_x[1] ? null : invert(\"child__row_Miles_per_Galloncolumn_Horsepower_x\", brush_x)"
            }
          ]
        },
        {
          "name": "brush_y",
          "value": [],
          "on": [
            {
              "events": {
                "source": "scope",
                "type": "mousedown",
                "filter": [
                  "!event.item || event.item.mark.name !== \"brush_brush\""
                ]
              },
              "update": "[y(unit), y(unit)]"
            },
            {
              "events": {
                "source": "window",
                "type": "mousemove",
                "consume": true,
                "between": [
                  {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  {"source": "window", "type": "mouseup"}
                ]
              },
              "update": "[brush_y[0], clamp(y(unit), 0, childHeight)]"
            },
            {
              "events": {"signal": "brush_scale_trigger"},
              "update": "[scale(\"child__row_Miles_per_Galloncolumn_Horsepower_y\", brush_Miles_per_Gallon[0]), scale(\"child__row_Miles_per_Galloncolumn_Horsepower_y\", brush_Miles_per_Gallon[1])]"
            },
            {
              "events": {"signal": "brush_translate_delta"},
              "update": "clampRange(panLinear(brush_translate_anchor.extent_y, brush_translate_delta.y / span(brush_translate_anchor.extent_y)), 0, childHeight)"
            },
            {
              "events": {"signal": "brush_zoom_delta"},
              "update": "clampRange(zoomLinear(brush_y, brush_zoom_anchor.y, brush_zoom_delta), 0, childHeight)"
            },
            {
              "events": [{"source": "scope", "type": "dblclick"}],
              "update": "[0, 0]"
            }
          ]
        },
        {
          "name": "brush_Miles_per_Gallon",
          "on": [
            {
              "events": {"signal": "brush_y"},
              "update": "brush_y[0] === brush_y[1] ? null : invert(\"child__row_Miles_per_Galloncolumn_Horsepower_y\", brush_y)"
            }
          ]
        },
        {
          "name": "brush_scale_trigger",
          "value": {},
          "on": [
            {
              "events": [
                {"scale": "child__row_Miles_per_Galloncolumn_Horsepower_x"},
                {"scale": "child__row_Miles_per_Galloncolumn_Horsepower_y"}
              ],
              "update": "(!isArray(brush_Horsepower) || (+invert(\"child__row_Miles_per_Galloncolumn_Horsepower_x\", brush_x)[0] === +brush_Horsepower[0] && +invert(\"child__row_Miles_per_Galloncolumn_Horsepower_x\", brush_x)[1] === +brush_Horsepower[1])) && (!isArray(brush_Miles_per_Gallon) || (+invert(\"child__row_Miles_per_Galloncolumn_Horsepower_y\", brush_y)[0] === +brush_Miles_per_Gallon[0] && +invert(\"child__row_Miles_per_Galloncolumn_Horsepower_y\", brush_y)[1] === +brush_Miles_per_Gallon[1])) ? brush_scale_trigger : {}"
            }
          ]
        },
        {
          "name": "brush_tuple",
          "on": [
            {
              "events": [
                {"signal": "brush_Horsepower || brush_Miles_per_Gallon"}
              ],
              "update": "brush_Horsepower && brush_Miles_per_Gallon ? {unit: \"child__row_Miles_per_Galloncolumn_Horsepower\", fields: brush_tuple_fields, values: [brush_Horsepower,brush_Miles_per_Gallon]} : null"
            }
          ]
        },
        {
          "name": "brush_tuple_fields",
          "value": [
            {"field": "Horsepower", "channel": "x", "type": "R"},
            {"field": "Miles_per_Gallon", "channel": "y", "type": "R"}
          ]
        },
        {
          "name": "brush_translate_anchor",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "mousedown",
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x), extent_y: slice(brush_y)}"
            }
          ]
        },
        {
          "name": "brush_translate_delta",
          "value": {},
          "on": [
            {
              "events": [
                {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "markname": "brush_brush"
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                }
              ],
              "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_anchor",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "update": "{x: x(unit), y: y(unit)}"
            }
          ]
        },
        {
          "name": "brush_zoom_delta",
          "on": [
            {
              "events": [
                {
                  "source": "scope",
                  "type": "wheel",
                  "consume": true,
                  "markname": "brush_brush"
                }
              ],
              "force": true,
              "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
            }
          ]
        },
        {
          "name": "brush_modify",
          "on": [
            {
              "events": {"signal": "brush_tuple"},
              "update": "modify(\"brush_store\", brush_tuple, true)"
            }
          ]
        }
      ],
      "marks": [
        {
          "name": "brush_brush_bg",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {
              "fill": {"value": "#333"},
              "fillOpacity": {"value": 0.125}
            },
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ]
            }
          }
        },
        {
          "name": "child__row_Miles_per_Galloncolumn_Horsepower_marks",
          "type": "symbol",
          "style": ["point"],
          "interactive": true,
          "from": {"data": "data_0"},
          "encode": {
            "update": {
              "opacity": {"value": 0.7},
              "fill": {"value": "transparent"},
              "stroke": [
                {
                  "test": "!(length(data(\"brush_store\"))) || (vlSelectionTest(\"brush_store\", datum))",
                  "scale": "color",
                  "field": "Origin"
                },
                {"value": "grey"}
              ],
              "x": {
                "scale": "child__row_Miles_per_Galloncolumn_Horsepower_x",
                "field": "Horsepower"
              },
              "y": {
                "scale": "child__row_Miles_per_Galloncolumn_Horsepower_y",
                "field": "Miles_per_Gallon"
              }
            }
          }
        },
        {
          "name": "brush_brush",
          "type": "rect",
          "clip": true,
          "encode": {
            "enter": {"fill": {"value": "transparent"}},
            "update": {
              "x": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_x[0]"
                },
                {"value": 0}
              ],
              "y": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_y[0]"
                },
                {"value": 0}
              ],
              "x2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_x[1]"
                },
                {"value": 0}
              ],
              "y2": [
                {
                  "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"child__row_Miles_per_Galloncolumn_Horsepower\"",
                  "signal": "brush_y[1]"
                },
                {"value": 0}
              ],
              "stroke": [
                {
                  "test": "brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]",
                  "value": "white"
                },
                {"value": null}
              ]
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "child__row_Miles_per_Galloncolumn_Horsepower_x",
          "orient": "bottom",
          "gridScale": "child__row_Miles_per_Galloncolumn_Horsepower_y",
          "grid": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Horsepower_y",
          "orient": "left",
          "gridScale": "child__row_Miles_per_Galloncolumn_Horsepower_x",
          "grid": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "domain": false,
          "labels": false,
          "maxExtent": 0,
          "minExtent": 0,
          "ticks": false,
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Horsepower_x",
          "orient": "bottom",
          "grid": false,
          "title": "Horsepower",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childWidth/40)"},
          "zindex": 0
        },
        {
          "scale": "child__row_Miles_per_Galloncolumn_Horsepower_y",
          "orient": "left",
          "grid": false,
          "title": "Miles_per_Gallon",
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(childHeight/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Origin"},
          {"data": "data_1", "field": "Origin"},
          {"data": "data_2", "field": "Origin"},
          {"data": "data_3", "field": "Origin"},
          {"data": "data_4", "field": "Origin"},
          {"data": "data_5", "field": "Origin"}
        ],
        "sort": true
      },
      "range": "category"
    },
    {
      "name": "child__row_Horsepowercolumn_Miles_per_Gallon_x",
      "type": "linear",
      "domain": {"data": "data_0", "field": "Miles_per_Gallon"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Horsepowercolumn_Miles_per_Gallon_y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "Horsepower"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Horsepowercolumn_Acceleration_x",
      "type": "linear",
      "domain": {"data": "data_1", "field": "Acceleration"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Horsepowercolumn_Acceleration_y",
      "type": "linear",
      "domain": {"data": "data_1", "field": "Horsepower"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Horsepowercolumn_Horsepower_x",
      "type": "linear",
      "domain": {"data": "data_2", "field": "Horsepower"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Horsepowercolumn_Horsepower_y",
      "type": "linear",
      "domain": {"data": "data_2", "field": "Horsepower"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Miles_per_Gallon_x",
      "type": "linear",
      "domain": {"data": "data_3", "field": "Miles_per_Gallon"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Miles_per_Gallon_y",
      "type": "linear",
      "domain": {"data": "data_3", "field": "Acceleration"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Acceleration_x",
      "type": "linear",
      "domain": {"data": "data_4", "field": "Acceleration"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Acceleration_y",
      "type": "linear",
      "domain": {"data": "data_4", "field": "Acceleration"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Horsepower_x",
      "type": "linear",
      "domain": {"data": "data_1", "field": "Horsepower"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Accelerationcolumn_Horsepower_y",
      "type": "linear",
      "domain": {"data": "data_1", "field": "Acceleration"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_x",
      "type": "linear",
      "domain": {"data": "data_5", "field": "Miles_per_Gallon"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Miles_per_Gallon_y",
      "type": "linear",
      "domain": {"data": "data_5", "field": "Miles_per_Gallon"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Acceleration_x",
      "type": "linear",
      "domain": {"data": "data_3", "field": "Acceleration"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Acceleration_y",
      "type": "linear",
      "domain": {"data": "data_3", "field": "Miles_per_Gallon"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Horsepower_x",
      "type": "linear",
      "domain": {"data": "data_0", "field": "Horsepower"},
      "range": [0, {"signal": "childWidth"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "child__row_Miles_per_Galloncolumn_Horsepower_y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "Miles_per_Gallon"},
      "range": [{"signal": "childHeight"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "legends": [
    {
      "stroke": "color",
      "symbolType": "circle",
      "title": "Origin",
      "encode": {
        "symbols": {
          "update": {
            "fill": {"value": "transparent"},
            "opacity": {"value": 0.7}
          }
        }
      }
    }
  ]
}
