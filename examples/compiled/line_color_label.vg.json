digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/stocks.csv</i>>;
    tooltip = "[43]&#010;data/stocks.csv"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> symbol>;
    tooltip = "[45]&#010;Filter datum.symbol!=='IBM'"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[51]&#010;Parse {date:date}"
  ]
  "52" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[52]&#010;Output 53"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "56" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[56]&#010;Identifier"
  ]
  "57" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[57]&#010;Output 58"
  ]
  "59" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[61]&#010;Identifier"
  ]
  "62" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[62]&#010;Parse {date:date}"
  ]
  "63" [
    label = <Output<br/><i>layer_1_layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[63]&#010;Output 64"
  ]
  "65" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> symbol, date<br/><font color="grey" point-size="10">OUT:</font> max_date, argmax_date>;
    tooltip = "[65]&#010;Aggregate {dimensions:Set(\symbol\),measures:{date:{argmax:Set(\argmax_date\),max:Set(\max_date\)}}}"
  ]
  "66" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date, price>;
    tooltip = "[66]&#010;FilterInvalid {date:{aggregate:max,field:date,type:temporal},price:{aggregate:{argmax:date},field:price,type:quantitative}}"
  ]
  "67" [
    label = <Output<br/><i>layer_1_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "69" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[69]&#010;Identifier"
  ]
  "70" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[70]&#010;Parse {date:date}"
  ]
  "71" [
    label = <Output<br/><i>layer_1_layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[71]&#010;Output 72"
  ]
  "73" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> symbol, date<br/><font color="grey" point-size="10">OUT:</font> max_date, argmax_date>;
    tooltip = "[73]&#010;Aggregate {dimensions:Set(\symbol\),measures:{date:{argmax:Set(\argmax_date\),max:Set(\max_date\)}}}"
  ]
  "74" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date, price>;
    tooltip = "[74]&#010;FilterInvalid {date:{aggregate:max,field:date,type:temporal},price:{aggregate:{argmax:date},field:price,type:quantitative}}"
  ]
  "75" [
    label = <Output<br/><i>layer_1_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[75]&#010;Output 76"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "50" "50" -> "51" "51" -> "52" "52" -> "54" "48" -> "56" "56" -> "57" "57" -> "59" "59" -> "61" "61" -> "62" "62" -> "63" "63" -> "65" "65" -> "66" "66" -> "67" "59" -> "69" "69" -> "70" "70" -> "71" "71" -> "73" "73" -> "74" "74" -> "75"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/stocks.csv</i>>;
    tooltip = "[43]&#010;data/stocks.csv"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> symbol>;
    tooltip = "[45]&#010;Filter datum.symbol!=='IBM'"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "67" [
    label = <Output<br/><i>layer_1_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "73" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> symbol, date<br/><font color="grey" point-size="10">OUT:</font> max_date, argmax_date>;
    tooltip = "[73]&#010;Aggregate {dimensions:Set(\symbol\),measures:{date:{argmax:Set(\argmax_date\),max:Set(\max_date\)}}}"
  ]
  "74" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date, price>;
    tooltip = "[74]&#010;FilterInvalid {date:{aggregate:max,field:date,type:temporal},price:{aggregate:{argmax:date},field:price,type:quantitative}}"
  ]
  "75" [
    label = <Output<br/><i>layer_1_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[75]&#010;Output 76"
  ]
  "77" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[77]&#010;Parse {date:date}"
  ]

  "43" -> "77" "77" -> "45" "45" -> "54" "54" -> "73" "73" -> "74" "74" -> "67" "67" -> "75"
}
{ data: 'layer_0_main', field: 'date' }
{ data: 'layer_1_layer_0_main', field: 'max_date' }
{ data: 'layer_1_layer_1_main', field: 'max_date' }
{ data: 'layer_0_main', field: 'price' }
{ data: 'layer_1_layer_0_main', field: 'argmax_date.price' }
{ data: 'layer_1_layer_1_main', field: 'argmax_date.price' }
{ data: 'layer_0_main', field: 'symbol', sort: true }
{ data: 'layer_1_layer_0_main', field: 'symbol', sort: true }
{ data: 'layer_1_layer_1_main', field: 'symbol', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Multi-series line chart with labels.",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/stocks.csv",
      "format": {"type": "csv", "parse": {"date": "date"}},
      "transform": [{"type": "filter", "expr": "datum.symbol!=='IBM'"}]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["symbol"],
          "ops": ["max", "argmax"],
          "fields": ["date", "date"],
          "as": ["max_date", "argmax_date"]
        },
        {
          "type": "filter",
          "expr": "(isDate(datum[\"max_date\"]) || (isValid(datum[\"max_date\"]) && isFinite(+datum[\"max_date\"]))) && isValid(datum[\"argmax_date\"].price) && isFinite(+datum[\"argmax_date\"].price)"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "layer_0_pathgroup",
      "type": "group",
      "from": {
        "facet": {
          "name": "faceted_path_layer_0_main",
          "data": "source_0",
          "groupby": ["symbol"]
        }
      },
      "encode": {
        "update": {
          "width": {"field": {"group": "width"}},
          "height": {"field": {"group": "height"}}
        }
      },
      "marks": [
        {
          "name": "layer_0_marks",
          "type": "line",
          "style": ["line"],
          "sort": {"field": "datum[\"date\"]"},
          "from": {"data": "faceted_path_layer_0_main"},
          "encode": {
            "update": {
              "stroke": {"scale": "color", "field": "symbol"},
              "x": {"scale": "x", "field": "date"},
              "y": {"scale": "y", "field": "price"},
              "defined": {
                "signal": "isValid(datum[\"date\"]) && isFinite(+datum[\"date\"]) && isValid(datum[\"price\"]) && isFinite(+datum[\"price\"])"
              }
            }
          }
        }
      ]
    },
    {
      "name": "layer_1_layer_0_marks",
      "type": "symbol",
      "style": ["circle"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "symbol"},
          "x": {"scale": "x", "field": "max_date"},
          "y": {"scale": "y", "field": "argmax_date.price"},
          "shape": {"value": "circle"}
        }
      }
    },
    {
      "name": "layer_1_layer_1_marks",
      "type": "text",
      "style": ["text"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "align": {"value": "left"},
          "dx": {"value": 4},
          "fill": {"scale": "color", "field": "symbol"},
          "x": {"scale": "x", "field": "max_date"},
          "y": {"scale": "y", "field": "argmax_date.price"},
          "text": {
            "signal": "isValid(datum[\"symbol\"]) ? datum[\"symbol\"] : \"\"+datum[\"symbol\"]"
          },
          "baseline": {"value": "middle"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "time",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "date"},
          {"data": "data_0", "field": "max_date"}
        ]
      },
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "price"},
          {"data": "data_0", "field": "argmax_date.price"}
        ]
      },
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "symbol"},
          {"data": "data_0", "field": "symbol"}
        ],
        "sort": true
      },
      "range": "category"
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "date",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "price",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ],
  "config": {"style": {"cell": {"stroke": null}}}
}
