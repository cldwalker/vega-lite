digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "47" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[51]&#010;Identifier"
  ]
  "52" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[52]&#010;Filter datum[gender]===Female"
  ]
  "53" [
    label = <Output<br/><i>concat_0_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[55]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "56" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> sum_people, age, gender<br/><font color="grey" point-size="10">OUT:</font> sum_people_start, sum_people_end>;
    tooltip = "[56]&#010;Stack -964252948"
  ]
  "57" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[57]&#010;FilterInvalid {people:{aggregate:sum,axis:{format:s,title:population},field:people,sort:descending,type:quantitative}}"
  ]
  "58" [
    label = <Output<br/><i>concat_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[58]&#010;Output 59"
  ]
  "60" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[60]&#010;Identifier"
  ]
  "61" [
    label = <Output<br/><i>concat_1_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]
  "63" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]
  "65" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[65]&#010;Identifier"
  ]
  "66" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[66]&#010;Filter datum[gender]===Male"
  ]
  "67" [
    label = <Output<br/><i>concat_2_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "69" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[69]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "70" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> sum_people, age, gender<br/><font color="grey" point-size="10">OUT:</font> sum_people_start, sum_people_end>;
    tooltip = "[70]&#010;Stack -739741625"
  ]
  "71" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[71]&#010;FilterInvalid {people:{aggregate:sum,axis:{format:s,title:population},field:people,type:quantitative}}"
  ]
  "72" [
    label = <Output<br/><i>concat_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[72]&#010;Output 73"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "49" "49" -> "51" "51" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "56" -> "57" "57" -> "58" "49" -> "60" "60" -> "61" "61" -> "63" "49" -> "65" "65" -> "66" "66" -> "67" "67" -> "69" "69" -> "70" "70" -> "71" "71" -> "72"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> sex<br/><font color="grey" point-size="10">OUT:</font> gender>;
    tooltip = "[46]&#010;Calculate {as:gender,calculate:datum.sex == 2 ? 'Female' : 'Male'}"
  ]
  "52" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[52]&#010;Filter datum[gender]===Female"
  ]
  "53" [
    label = <Output<br/><i>concat_0_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[55]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "56" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> sum_people, age, gender<br/><font color="grey" point-size="10">OUT:</font> sum_people_start, sum_people_end>;
    tooltip = "[56]&#010;Stack -964252948"
  ]
  "57" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[57]&#010;FilterInvalid {people:{aggregate:sum,axis:{format:s,title:population},field:people,sort:descending,type:quantitative}}"
  ]
  "58" [
    label = <Output<br/><i>concat_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[58]&#010;Output 59"
  ]
  "61" [
    label = <Output<br/><i>concat_1_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[61]&#010;Output 62"
  ]
  "63" [
    label = <Output<br/><i>concat_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]
  "66" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> gender>;
    tooltip = "[66]&#010;Filter datum[gender]===Male"
  ]
  "67" [
    label = <Output<br/><i>concat_2_raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[67]&#010;Output 68"
  ]
  "69" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, gender, people<br/><font color="grey" point-size="10">OUT:</font> sum_people>;
    tooltip = "[69]&#010;Aggregate {dimensions:Set(\age\,\gender\),measures:{people:{sum:Set(\sum_people\)}}}"
  ]
  "70" [
    label = <Stack<br/><font color="grey" point-size="10">IN:</font> sum_people, age, gender<br/><font color="grey" point-size="10">OUT:</font> sum_people_start, sum_people_end>;
    tooltip = "[70]&#010;Stack -739741625"
  ]
  "71" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[71]&#010;FilterInvalid {people:{aggregate:sum,axis:{format:s,title:population},field:people,type:quantitative}}"
  ]
  "72" [
    label = <Output<br/><i>concat_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[72]&#010;Output 73"
  ]

  "43" -> "45" "45" -> "46" "46" -> "61" "61" -> "63" "63" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "56" -> "57" "57" -> "58" "63" -> "66" "66" -> "67" "67" -> "69" "69" -> "70" "70" -> "71" "71" -> "72"
}
{ data: 'concat_0_main', field: 'gender', sort: true }
{ data: 'concat_2_main', field: 'gender', sort: true }
{ data: 'concat_0_main', field: 'sum_people_start' }
{ data: 'concat_0_main', field: 'sum_people_end' }
{
  data: 'concat_0_raw',
  field: 'age',
  sort: { op: 'min', field: 'age', order: 'descending' }
}
{
  data: 'concat_1_raw',
  field: 'age',
  sort: { op: 'min', field: 'age', order: 'descending' }
}
{ data: 'concat_2_main', field: 'sum_people_start' }
{ data: 'concat_2_main', field: 'sum_people_end' }
{
  data: 'concat_2_raw',
  field: 'age',
  sort: { op: 'min', field: 'age', order: 'descending' }
}
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A population pyramid for the US in 2000.",
  "background": "white",
  "padding": 5,
  "data": [
    {
      "name": "source_0",
      "url": "data/population.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "filter", "expr": "datum.year == 2000"},
        {
          "type": "formula",
          "expr": "datum.sex == 2 ? 'Female' : 'Male'",
          "as": "gender"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {"type": "filter", "expr": "datum[\"gender\"]===\"Female\""}
      ]
    },
    {
      "name": "data_2",
      "source": "data_1",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["age", "gender"],
          "ops": ["sum"],
          "fields": ["people"],
          "as": ["sum_people"]
        },
        {
          "type": "stack",
          "groupby": ["age"],
          "field": "sum_people",
          "sort": {"field": ["gender"], "order": ["ascending"]},
          "as": ["sum_people_start", "sum_people_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
        }
      ]
    },
    {
      "name": "data_3",
      "source": "source_0",
      "transform": [{"type": "filter", "expr": "datum[\"gender\"]===\"Male\""}]
    },
    {
      "name": "data_4",
      "source": "data_3",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["age", "gender"],
          "ops": ["sum"],
          "fields": ["people"],
          "as": ["sum_people"]
        },
        {
          "type": "stack",
          "groupby": ["age"],
          "field": "sum_people",
          "sort": {"field": ["gender"], "order": ["ascending"]},
          "as": ["sum_people_start", "sum_people_end"],
          "offset": "zero"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"sum_people\"]) && isFinite(+datum[\"sum_people\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "concat_0_width", "value": 200},
    {"name": "concat_0_y_step", "value": 20},
    {
      "name": "concat_0_height",
      "update": "bandspace(domain('concat_0_y').length, 0.1, 0.05) * concat_0_y_step"
    },
    {"name": "concat_1_width", "value": 20},
    {"name": "concat_1_y_step", "value": 20},
    {
      "name": "concat_1_height",
      "update": "bandspace(domain('concat_1_y').length, 1, 0.5) * concat_1_y_step"
    },
    {"name": "concat_2_width", "value": 200},
    {"name": "concat_2_y_step", "value": 20},
    {
      "name": "concat_2_height",
      "update": "bandspace(domain('concat_2_y').length, 0.1, 0.05) * concat_2_y_step"
    }
  ],
  "layout": {"padding": 0, "bounds": "full", "align": "each"},
  "marks": [
    {
      "type": "group",
      "name": "concat_0_group",
      "title": {"text": "Female", "frame": "group"},
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "concat_0_width"},
          "height": {"signal": "concat_0_height"}
        }
      },
      "marks": [
        {
          "name": "concat_0_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_2"},
          "encode": {
            "update": {
              "fill": {"scale": "color", "field": "gender"},
              "x": {"scale": "concat_0_x", "field": "sum_people_end"},
              "x2": {"scale": "concat_0_x", "field": "sum_people_start"},
              "y": {"scale": "concat_0_y", "field": "age"},
              "height": {"scale": "concat_0_y", "band": 1}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_0_x",
          "orient": "bottom",
          "grid": false,
          "title": "population",
          "format": "s",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_0_width/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_1_group",
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "concat_1_width"},
          "height": {"signal": "concat_1_height"},
          "stroke": {"value": null}
        }
      },
      "marks": [
        {
          "name": "concat_1_marks",
          "type": "text",
          "style": ["text"],
          "from": {"data": "source_0"},
          "encode": {
            "update": {
              "align": {"value": "center"},
              "fill": {"value": "black"},
              "x": {"signal": "concat_1_width", "mult": 0.5},
              "y": {"scale": "concat_1_y", "field": "age"},
              "text": {"signal": "format(datum[\"age\"], \"\")"},
              "baseline": {"value": "middle"}
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "name": "concat_2_group",
      "title": {"text": "Male", "frame": "group"},
      "style": "cell",
      "encode": {
        "update": {
          "width": {"signal": "concat_2_width"},
          "height": {"signal": "concat_2_height"}
        }
      },
      "marks": [
        {
          "name": "concat_2_marks",
          "type": "rect",
          "style": ["bar"],
          "from": {"data": "data_4"},
          "encode": {
            "update": {
              "fill": {"scale": "color", "field": "gender"},
              "x": {"scale": "concat_2_x", "field": "sum_people_end"},
              "x2": {"scale": "concat_2_x", "field": "sum_people_start"},
              "y": {"scale": "concat_2_y", "field": "age"},
              "height": {"scale": "concat_2_y", "band": 1}
            }
          }
        }
      ],
      "axes": [
        {
          "scale": "concat_2_x",
          "orient": "bottom",
          "grid": false,
          "title": "population",
          "format": "s",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(concat_2_width/40)"},
          "zindex": 0
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "data_2", "field": "gender"},
          {"data": "data_4", "field": "gender"}
        ],
        "sort": true
      },
      "range": ["#675193", "#ca8861"]
    },
    {
      "name": "concat_0_x",
      "type": "linear",
      "domain": {
        "data": "data_2",
        "fields": ["sum_people_start", "sum_people_end"]
      },
      "range": [0, {"signal": "concat_0_width"}],
      "reverse": true,
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_0_y",
      "type": "band",
      "domain": {
        "data": "data_1",
        "field": "age",
        "sort": {"order": "descending"}
      },
      "range": {"step": {"signal": "concat_0_y_step"}},
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    },
    {
      "name": "concat_1_y",
      "type": "point",
      "domain": {
        "data": "source_0",
        "field": "age",
        "sort": {"order": "descending"}
      },
      "range": {"step": {"signal": "concat_1_y_step"}},
      "padding": 0.5
    },
    {
      "name": "concat_2_x",
      "type": "linear",
      "domain": {
        "data": "data_4",
        "fields": ["sum_people_start", "sum_people_end"]
      },
      "range": [0, {"signal": "concat_2_width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "concat_2_y",
      "type": "band",
      "domain": {
        "data": "data_3",
        "field": "age",
        "sort": {"order": "descending"}
      },
      "range": {"step": {"signal": "concat_2_y_step"}},
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    }
  ],
  "config": {"style": {"cell": {"stroke": null}}, "axis": {"grid": false}}
}
