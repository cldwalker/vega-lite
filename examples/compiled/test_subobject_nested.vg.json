digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> source.reco, source.yes<br/><font color="grey" point-size="10">OUT:</font> source.reco, source.yes>;
    tooltip = "[45]&#010;Parse {source.reco:flatten,source.yes:flatten}"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> source.reco, source.yes>;
    tooltip = "[48]&#010;FilterInvalid {source.reco:{field:source.reco,type:quantitative},source.yes:{field:source.yes,type:quantitative}}"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "49"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source>;
    tooltip = "[43]&#010;undefined"
  ]
  "45" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> source.reco, source.yes<br/><font color="grey" point-size="10">OUT:</font> source.reco, source.yes>;
    tooltip = "[45]&#010;Parse {source.reco:flatten,source.yes:flatten}"
  ]
  "48" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> source.reco, source.yes>;
    tooltip = "[48]&#010;FilterInvalid {source.reco:{field:source.reco,type:quantitative},source.yes:{field:source.yes,type:quantitative}}"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]

  "43" -> "45" "45" -> "48" "48" -> "49"
}
{ data: 'main', field: 'source\\.reco' }
{ data: 'main', field: 'source\\.yes' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "values": {
        "hits": {
          "hits": [
            {"source": {"reco": 2, "yes": 1}},
            {"source": {"reco": 3, "yes": 4}},
            {"source": {"reco": 2, "yes": 0}},
            {"source": {"reco": 1, "yes": 3}},
            {"source": {"reco": 3, "yes": 4}},
            {"source": {"reco": 1, "yes": 1}},
            {"source": {"reco": 1, "yes": 1}},
            {"source": {"reco": 1, "yes": 1}},
            {"source": {"reco": 1, "yes": 0}},
            {"source": {"reco": 1, "yes": 1}}
          ]
        }
      },
      "format": {"property": "hits.hits"}
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "formula",
          "expr": "datum[\"source\"] && datum[\"source\"][\"reco\"]",
          "as": "source.reco"
        },
        {
          "type": "formula",
          "expr": "datum[\"source\"] && datum[\"source\"][\"yes\"]",
          "as": "source.yes"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"source.reco\"]) && isFinite(+datum[\"source.reco\"]) && isValid(datum[\"source.yes\"]) && isFinite(+datum[\"source.yes\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "symbol",
      "style": ["point"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "opacity": {"value": 0.7},
          "fill": {"value": "transparent"},
          "stroke": {"value": "#4c78a8"},
          "x": {"scale": "x", "field": "source\\.reco"},
          "y": {"scale": "y", "field": "source\\.yes"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {"data": "data_0", "field": "source\\.reco"},
      "range": [0, {"signal": "width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {"data": "data_0", "field": "source\\.yes"},
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "source.reco",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "source.yes",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ]
}
