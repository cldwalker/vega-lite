digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/stocks.csv</i>>;
    tooltip = "[43]&#010;data/stocks.csv"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[47]&#010;Output 48"
  ]
  "49" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[49]&#010;Identifier"
  ]
  "50" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[52]&#010;Output 53"
  ]
  "54" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[54]&#010;Identifier"
  ]
  "55" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[55]&#010;Parse {date:date}"
  ]
  "56" [
    label = <Output<br/><i>layer_0_layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Output<br/><i>layer_0_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[58]&#010;Output 59"
  ]
  "60" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[60]&#010;Identifier"
  ]
  "61" [
    label = <Filter>;
    tooltip = "[61]&#010;Filter (vlSelectionTest(hover_store, datum))"
  ]
  "62" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[62]&#010;Parse {date:date}"
  ]
  "63" [
    label = <Output<br/><i>layer_0_layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[63]&#010;Output 64"
  ]
  "65" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date, price>;
    tooltip = "[65]&#010;FilterInvalid {date:{field:date,type:temporal},price:{field:price,type:quantitative}}"
  ]
  "66" [
    label = <Output<br/><i>layer_0_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[66]&#010;Output 67"
  ]
  "68" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[68]&#010;Identifier"
  ]
  "69" [
    label = <PivotTransform<br/><font color="grey" point-size="10">IN:</font> symbol, price, date>;
    tooltip = "[69]&#010;PivotTransform {groupby:[date],pivot:symbol,value:price}"
  ]
  "70" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[70]&#010;Parse {date:date}"
  ]
  "71" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[71]&#010;Output 72"
  ]
  "73" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date>;
    tooltip = "[73]&#010;FilterInvalid {date:{field:date,type:temporal}}"
  ]
  "74" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[74]&#010;Output 75"
  ]
  "76" [
    label = <Filter>;
    tooltip = "[76]&#010;Filter (vlSelectionTest(hover_store, datum))"
  ]
  "77" [
    label = <Output<br/><i>layer_1_lookup_hover</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[77]&#010;Output 78"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "49" "49" -> "50" "50" -> "52" "52" -> "54" "54" -> "55" "55" -> "56" "56" -> "58" "52" -> "60" "60" -> "61" "61" -> "62" "62" -> "63" "63" -> "65" "65" -> "66" "47" -> "68" "68" -> "69" "69" -> "70" "70" -> "71" "71" -> "73" "73" -> "74" "74" -> "76" "76" -> "77"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/stocks.csv</i>>;
    tooltip = "[43]&#010;data/stocks.csv"
  ]
  "58" [
    label = <Output<br/><i>layer_0_layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[58]&#010;Output 59"
  ]
  "61" [
    label = <Filter>;
    tooltip = "[61]&#010;Filter (vlSelectionTest(hover_store, datum))"
  ]
  "65" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date, price>;
    tooltip = "[65]&#010;FilterInvalid {date:{field:date,type:temporal},price:{field:price,type:quantitative}}"
  ]
  "66" [
    label = <Output<br/><i>layer_0_layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[66]&#010;Output 67"
  ]
  "69" [
    label = <PivotTransform<br/><font color="grey" point-size="10">IN:</font> symbol, price, date>;
    tooltip = "[69]&#010;PivotTransform {groupby:[date],pivot:symbol,value:price}"
  ]
  "70" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[70]&#010;Parse {date:date}"
  ]
  "73" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> date>;
    tooltip = "[73]&#010;FilterInvalid {date:{field:date,type:temporal}}"
  ]
  "74" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[74]&#010;Output 75"
  ]
  "79" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[79]&#010;Parse {date:date}"
  ]

  "43" -> "79" "79" -> "58" "58" -> "69" "69" -> "70" "70" -> "73" "73" -> "74" "58" -> "61" "61" -> "65" "65" -> "66"
}
{ data: 'layer_0_layer_0_main', field: 'date' }
{ data: 'layer_0_layer_1_main', field: 'date' }
{ data: 'layer_1_main', field: 'date' }
{ data: 'layer_0_layer_0_main', field: 'price' }
{ data: 'layer_0_layer_1_main', field: 'price' }
{ data: 'layer_0_layer_0_main', field: 'symbol', sort: true }
{ data: 'layer_0_layer_1_main', field: 'symbol', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 400,
  "height": 300,
  "style": "cell",
  "data": [
    {"name": "hover_store"},
    {
      "name": "source_0",
      "url": "data/stocks.csv",
      "format": {"type": "csv", "parse": {"date": "date"}}
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "pivot",
          "field": "symbol",
          "value": "price",
          "groupby": ["date"]
        },
        {"type": "formula", "expr": "toDate(datum[\"date\"])", "as": "date"},
        {
          "type": "filter",
          "expr": "(isDate(datum[\"date\"]) || (isValid(datum[\"date\"]) && isFinite(+datum[\"date\"])))"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {"type": "filter", "expr": "(vlSelectionTest(\"hover_store\", datum))"},
        {
          "type": "filter",
          "expr": "(isDate(datum[\"date\"]) || (isValid(datum[\"date\"]) && isFinite(+datum[\"date\"]))) && isValid(datum[\"price\"]) && isFinite(+datum[\"price\"])"
        }
      ]
    }
  ],
  "signals": [
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "hover",
      "update": "vlSelectionResolve(\"hover_store\", \"union\")"
    },
    {
      "name": "hover_tuple",
      "on": [
        {
          "events": [
            {
              "source": "scope",
              "type": "mouseover",
              "markname": "layer_1_voronoi"
            }
          ],
          "update": "datum && item().mark.marktype !== 'group' ? {unit: \"layer_1\", fields: hover_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"date\"]]} : null",
          "force": true
        },
        {"events": [{"source": "scope", "type": "mouseout"}], "update": "null"}
      ]
    },
    {"name": "hover_tuple_fields", "value": [{"type": "E", "field": "date"}]},
    {
      "name": "hover_modify",
      "on": [
        {
          "events": {"signal": "hover_tuple"},
          "update": "modify(\"hover_store\", hover_tuple, true)"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "layer_0_layer_0_pathgroup",
      "type": "group",
      "from": {
        "facet": {
          "name": "faceted_path_layer_0_layer_0_main",
          "data": "source_0",
          "groupby": ["symbol"]
        }
      },
      "encode": {
        "update": {
          "width": {"field": {"group": "width"}},
          "height": {"field": {"group": "height"}}
        }
      },
      "marks": [
        {
          "name": "layer_0_layer_0_marks",
          "type": "line",
          "style": ["line"],
          "sort": {"field": "datum[\"date\"]"},
          "interactive": false,
          "from": {"data": "faceted_path_layer_0_layer_0_main"},
          "encode": {
            "update": {
              "stroke": {"scale": "color", "field": "symbol"},
              "x": {"scale": "x", "field": "date"},
              "y": {"scale": "y", "field": "price"},
              "defined": {
                "signal": "isValid(datum[\"date\"]) && isFinite(+datum[\"date\"]) && isValid(datum[\"price\"]) && isFinite(+datum[\"price\"])"
              }
            }
          }
        }
      ]
    },
    {
      "name": "layer_0_layer_1_marks",
      "type": "symbol",
      "style": ["point"],
      "interactive": false,
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "opacity": {"value": 0.7},
          "fill": {"value": "transparent"},
          "stroke": {"scale": "color", "field": "symbol"},
          "x": {"scale": "x", "field": "date"},
          "y": {"scale": "y", "field": "price"}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "rule",
      "style": ["rule"],
      "interactive": true,
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "stroke": {"value": "black"},
          "opacity": [
            {"test": "(vlSelectionTest(\"hover_store\", datum))", "value": 0.3},
            {"value": 0}
          ],
          "tooltip": {
            "signal": "{\"AAPL\": format(datum[\"AAPL\"], \"\"), \"AMZN\": format(datum[\"AMZN\"], \"\"), \"GOOG\": format(datum[\"GOOG\"], \"\"), \"IBM\": format(datum[\"IBM\"], \"\"), \"MSFT\": format(datum[\"MSFT\"], \"\")}"
          },
          "x": {"scale": "x", "field": "date"},
          "y": {"value": 0},
          "y2": {"field": {"group": "height"}}
        }
      }
    },
    {
      "name": "layer_1_voronoi",
      "type": "path",
      "interactive": true,
      "from": {"data": "layer_1_marks"},
      "encode": {
        "update": {
          "fill": {"value": "transparent"},
          "strokeWidth": {"value": 0.35},
          "stroke": {"value": "transparent"},
          "isVoronoi": {"value": true},
          "tooltip": {
            "signal": "{\"AAPL\": format(datum.datum[\"AAPL\"], \"\"), \"AMZN\": format(datum.datum[\"AMZN\"], \"\"), \"GOOG\": format(datum.datum[\"GOOG\"], \"\"), \"IBM\": format(datum.datum[\"IBM\"], \"\"), \"MSFT\": format(datum.datum[\"MSFT\"], \"\")}"
          }
        }
      },
      "transform": [
        {
          "type": "voronoi",
          "x": {"expr": "datum.datum.x || 0"},
          "y": {"expr": "datum.datum.y || 0"},
          "size": [{"signal": "width"}, {"signal": "height"}]
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "time",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "date"},
          {"data": "data_1", "field": "date"},
          {"data": "data_0", "field": "date"}
        ]
      },
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "price"},
          {"data": "data_1", "field": "price"}
        ]
      },
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "source_0", "field": "symbol"},
          {"data": "data_1", "field": "symbol"}
        ],
        "sort": true
      },
      "range": "category"
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "date",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "price",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ],
  "legends": [
    {
      "stroke": "color",
      "symbolType": "circle",
      "title": "symbol",
      "encode": {
        "symbols": {
          "update": {
            "fill": {"value": "transparent"},
            "opacity": {"value": 0.7}
          }
        }
      }
    }
  ]
}
