digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> people<br/><font color="grey" point-size="10">OUT:</font> people>;
    tooltip = "[51]&#010;Parse {people:number}"
  ]
  "52" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[52]&#010;Output 53"
  ]
  "54" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, people<br/><font color="grey" point-size="10">OUT:</font> min_people, max_people>;
    tooltip = "[54]&#010;Aggregate {dimensions:Set(\age\),measures:{people:{max:Set(\max_people\),min:Set(\min_people\)}}}"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[55]&#010;FilterInvalid {people:{aggregate:min,axis:{title:population},field:people,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[58]&#010;Identifier"
  ]
  "59" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> people<br/><font color="grey" point-size="10">OUT:</font> people>;
    tooltip = "[59]&#010;Parse {people:number}"
  ]
  "60" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[60]&#010;Output 61"
  ]
  "62" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, people<br/><font color="grey" point-size="10">OUT:</font> min_people>;
    tooltip = "[62]&#010;Aggregate {dimensions:Set(\age\),measures:{people:{min:Set(\min_people\)}}}"
  ]
  "63" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[63]&#010;FilterInvalid {people:{aggregate:min,axis:{title:population},field:people,type:quantitative}}"
  ]
  "64" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[64]&#010;Output 65"
  ]
  "66" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[66]&#010;Identifier"
  ]
  "67" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> people<br/><font color="grey" point-size="10">OUT:</font> people>;
    tooltip = "[67]&#010;Parse {people:number}"
  ]
  "68" [
    label = <Output<br/><i>layer_2_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[68]&#010;Output 69"
  ]
  "70" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, people<br/><font color="grey" point-size="10">OUT:</font> max_people>;
    tooltip = "[70]&#010;Aggregate {dimensions:Set(\age\),measures:{people:{max:Set(\max_people\)}}}"
  ]
  "71" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[71]&#010;FilterInvalid {people:{aggregate:max,axis:{title:population},field:people,type:quantitative}}"
  ]
  "72" [
    label = <Output<br/><i>layer_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[72]&#010;Output 73"
  ]
  "74" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[74]&#010;Identifier"
  ]
  "75" [
    label = <Output<br/><i>layer_3_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[75]&#010;Output 76"
  ]
  "77" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, people<br/><font color="grey" point-size="10">OUT:</font> mean_people>;
    tooltip = "[77]&#010;Aggregate {dimensions:Set(\age\),measures:{people:{mean:Set(\mean_people\)}}}"
  ]
  "78" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[78]&#010;FilterInvalid {people:{aggregate:mean,axis:{title:population},field:people,type:quantitative}}"
  ]
  "79" [
    label = <Output<br/><i>layer_3_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[79]&#010;Output 80"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "50" "50" -> "51" "51" -> "52" "52" -> "54" "54" -> "55" "55" -> "56" "48" -> "58" "58" -> "59" "59" -> "60" "60" -> "62" "62" -> "63" "63" -> "64" "48" -> "66" "66" -> "67" "67" -> "68" "68" -> "70" "70" -> "71" "71" -> "72" "48" -> "74" "74" -> "75" "75" -> "77" "77" -> "78" "78" -> "79"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/population.json</i>>;
    tooltip = "[43]&#010;data/population.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> year>;
    tooltip = "[45]&#010;Filter datum.year == 2000"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[55]&#010;FilterInvalid {people:{aggregate:min,axis:{title:population},field:people,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "64" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[64]&#010;Output 65"
  ]
  "71" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[71]&#010;FilterInvalid {people:{aggregate:max,axis:{title:population},field:people,type:quantitative}}"
  ]
  "72" [
    label = <Output<br/><i>layer_2_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[72]&#010;Output 73"
  ]
  "77" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> age, people<br/><font color="grey" point-size="10">OUT:</font> mean_people, min_people, max_people>;
    tooltip = "[77]&#010;Aggregate {dimensions:Set(\age\),measures:{people:{max:Set(\max_people\),mean:Set(\mean_people\),min:Set(\min_people\)}}}"
  ]
  "78" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> people>;
    tooltip = "[78]&#010;FilterInvalid {people:{aggregate:mean,axis:{title:population},field:people,type:quantitative}}"
  ]
  "79" [
    label = <Output<br/><i>layer_3_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[79]&#010;Output 80"
  ]
  "81" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> people<br/><font color="grey" point-size="10">OUT:</font> people>;
    tooltip = "[81]&#010;Parse {people:number}"
  ]

  "43" -> "81" "81" -> "45" "45" -> "77" "77" -> "78" "78" -> "79" "77" -> "55" "55" -> "64" "64" -> "56" "77" -> "71" "71" -> "72"
}
{ data: 'layer_0_main', field: 'age', sort: true }
{ data: 'layer_1_main', field: 'age', sort: true }
{ data: 'layer_2_main', field: 'age', sort: true }
{ data: 'layer_3_main', field: 'age', sort: true }
{ data: 'layer_0_main', field: 'min_people' }
{ data: 'layer_0_main', field: 'max_people' }
{ data: 'layer_1_main', field: 'min_people' }
{ data: 'layer_2_main', field: 'max_people' }
{ data: 'layer_3_main', field: 'mean_people' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A error bar plot showing mean, min, and max in the US population distribution of age groups in 2000.",
  "background": "white",
  "padding": 5,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/population.json",
      "format": {"type": "json", "parse": {"people": "number"}},
      "transform": [
        {"type": "filter", "expr": "datum.year == 2000"},
        {
          "type": "aggregate",
          "groupby": ["age"],
          "ops": ["mean", "min", "max"],
          "fields": ["people", "people", "people"],
          "as": ["mean_people", "min_people", "max_people"]
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"mean_people\"]) && isFinite(+datum[\"mean_people\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"min_people\"]) && isFinite(+datum[\"min_people\"])"
        }
      ]
    },
    {
      "name": "data_2",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"max_people\"]) && isFinite(+datum[\"max_people\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "x_step", "value": 20},
    {"name": "width", "update": "bandspace(domain('x').length, 0, 0) * x_step"}
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "rule",
      "style": ["rule"],
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "stroke": {"value": "black"},
          "x": {"scale": "x", "field": "age", "band": 0.5},
          "y": {"scale": "y", "field": "min_people"},
          "y2": {"scale": "y", "field": "max_people"}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "rect",
      "style": ["tick"],
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "fill": {"value": "#4c78a8"},
          "xc": {"scale": "x", "field": "age", "band": 0.5},
          "yc": {"scale": "y", "field": "min_people"},
          "width": {"value": 5},
          "height": {"value": 1}
        }
      }
    },
    {
      "name": "layer_2_marks",
      "type": "rect",
      "style": ["tick"],
      "from": {"data": "data_2"},
      "encode": {
        "update": {
          "fill": {"value": "#4c78a8"},
          "xc": {"scale": "x", "field": "age", "band": 0.5},
          "yc": {"scale": "y", "field": "max_people"},
          "width": {"value": 5},
          "height": {"value": 1}
        }
      }
    },
    {
      "name": "layer_3_marks",
      "type": "symbol",
      "style": ["point"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "fill": {"value": "transparent"},
          "stroke": {"value": "#4c78a8"},
          "x": {"scale": "x", "field": "age", "band": 0.5},
          "y": {"scale": "y", "field": "mean_people"},
          "size": {"value": 2}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "band",
      "domain": {
        "fields": [
          {"data": "data_1", "field": "age"},
          {"data": "data_2", "field": "age"},
          {"data": "data_0", "field": "age"}
        ],
        "sort": true
      },
      "range": {"step": {"signal": "x_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_1", "field": "min_people"},
          {"data": "data_1", "field": "max_people"},
          {"data": "data_2", "field": "max_people"},
          {"data": "data_0", "field": "mean_people"}
        ]
      },
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    }
  ],
  "axes": [
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "age",
      "labelAlign": "right",
      "labelAngle": 270,
      "labelBaseline": "middle",
      "labelOverlap": true,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "population",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ]
}
