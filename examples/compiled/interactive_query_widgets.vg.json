digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> Year<br/><font color="grey" point-size="10">OUT:</font> Year>;
    tooltip = "[45]&#010;Calculate {as:Year,calculate:year(datum.Year)}"
  ]
  "46" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[46]&#010;Output 47"
  ]
  "48" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[50]&#010;Identifier"
  ]
  "51" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[51]&#010;Output 52"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Miles_per_Gallon>;
    tooltip = "[53]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "56" [
    label = <Filter>;
    tooltip = "[56]&#010;Filter !(length(data(CylYr_store))) || (vlSelectionTest(CylYr_store, datum))"
  ]
  "57" [
    label = <Output<br/><i>layer_0_lookup_CylYr</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[57]&#010;Output 58"
  ]
  "59" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[59]&#010;Identifier"
  ]
  "60" [
    label = <Filter>;
    tooltip = "[60]&#010;Filter !(length(data(CylYr_store))) || (vlSelectionTest(CylYr_store, datum))"
  ]
  "61" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[61]&#010;Output 62"
  ]
  "63" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Miles_per_Gallon>;
    tooltip = "[63]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "64" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[64]&#010;Output 65"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "48" "48" -> "50" "50" -> "51" "51" -> "53" "53" -> "54" "54" -> "56" "56" -> "57" "48" -> "59" "59" -> "60" "60" -> "61" "61" -> "63" "63" -> "64"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> Year<br/><font color="grey" point-size="10">OUT:</font> Year>;
    tooltip = "[45]&#010;Calculate {as:Year,calculate:year(datum.Year)}"
  ]
  "53" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Miles_per_Gallon>;
    tooltip = "[53]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "54" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[54]&#010;Output 55"
  ]
  "60" [
    label = <Filter>;
    tooltip = "[60]&#010;Filter !(length(data(CylYr_store))) || (vlSelectionTest(CylYr_store, datum))"
  ]
  "63" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Horsepower, Miles_per_Gallon>;
    tooltip = "[63]&#010;FilterInvalid {Horsepower:{field:Horsepower,type:quantitative},Miles_per_Gallon:{field:Miles_per_Gallon,type:quantitative}}"
  ]
  "64" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[64]&#010;Output 65"
  ]

  "43" -> "45" "45" -> "53" "53" -> "54" "45" -> "60" "60" -> "63" "63" -> "64"
}
{ data: 'layer_0_main', field: 'Horsepower' }
{ data: 'layer_1_main', field: 'Horsepower' }
{ data: 'layer_0_main', field: 'Miles_per_Gallon' }
{ data: 'layer_1_main', field: 'Miles_per_Gallon' }
{ data: 'layer_0_main', field: 'Origin', sort: true }
{ data: 'layer_1_main', field: 'Origin', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Drag the sliders to highlight points.",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "CylYr_store",
      "values": [
        {
          "unit": "layer_0",
          "fields": [
            {"type": "E", "field": "Cylinders"},
            {"type": "E", "field": "Year"}
          ],
          "values": [4, 1977]
        }
      ]
    },
    {
      "name": "source_0",
      "url": "data/cars.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "formula", "expr": "year(datum.Year)", "as": "Year"}
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"]) && isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "!(length(data(\"CylYr_store\"))) || (vlSelectionTest(\"CylYr_store\", datum))"
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"Horsepower\"]) && isFinite(+datum[\"Horsepower\"]) && isValid(datum[\"Miles_per_Gallon\"]) && isFinite(+datum[\"Miles_per_Gallon\"])"
        }
      ]
    }
  ],
  "signals": [
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {
      "name": "CylYr_Year",
      "init": "1977",
      "bind": {"input": "range", "min": 1969, "max": 1981, "step": 1}
    },
    {
      "name": "CylYr_Cylinders",
      "init": "4",
      "bind": {"input": "range", "min": 3, "max": 8, "step": 1}
    },
    {
      "name": "CylYr",
      "update": "vlSelectionResolve(\"CylYr_store\", \"union\")"
    },
    {
      "name": "CylYr_tuple",
      "update": "CylYr_Cylinders !== null && CylYr_Year !== null ? {fields: CylYr_tuple_fields, values: [CylYr_Cylinders, CylYr_Year]} : null"
    },
    {
      "name": "CylYr_tuple_fields",
      "value": [
        {"type": "E", "field": "Cylinders"},
        {"type": "E", "field": "Year"}
      ]
    },
    {
      "name": "CylYr_modify",
      "on": [
        {
          "events": {"signal": "CylYr_tuple"},
          "update": "modify(\"CylYr_store\", CylYr_tuple, true)"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "symbol",
      "style": ["circle"],
      "interactive": true,
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "opacity": {"value": 0.7},
          "fill": [
            {
              "test": "!(length(data(\"CylYr_store\"))) || (vlSelectionTest(\"CylYr_store\", datum))",
              "scale": "color",
              "field": "Origin"
            },
            {"value": "grey"}
          ],
          "x": {"scale": "x", "field": "Horsepower"},
          "y": {"scale": "y", "field": "Miles_per_Gallon"},
          "shape": {"value": "circle"}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "symbol",
      "style": ["circle"],
      "interactive": false,
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "opacity": {"value": 0.7},
          "fill": {"scale": "color", "field": "Origin"},
          "x": {"scale": "x", "field": "Horsepower"},
          "y": {"scale": "y", "field": "Miles_per_Gallon"},
          "size": {"value": 100},
          "shape": {"value": "circle"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Horsepower"},
          {"data": "data_1", "field": "Horsepower"}
        ]
      },
      "range": [0, {"signal": "width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Miles_per_Gallon"},
          {"data": "data_1", "field": "Miles_per_Gallon"}
        ]
      },
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "Origin"},
          {"data": "data_1", "field": "Origin"}
        ],
        "sort": true
      },
      "range": "category"
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "Horsepower",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Miles_per_Gallon",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ],
  "legends": [
    {
      "fill": "color",
      "symbolType": "circle",
      "title": "Origin",
      "encode": {"symbols": {"update": {"opacity": {"value": 0.7}}}}
    }
  ]
}
