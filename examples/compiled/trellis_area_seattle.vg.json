digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/seattle-temps.csv</i>>;
    tooltip = "[43]&#010;data/seattle-temps.csv"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> order>;
    tooltip = "[45]&#010;Calculate {as:order,calculate:(hours(datum.date) + 18) % 24}"
  ]
  "46" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[46]&#010;Parse {date:date}"
  ]
  "47" [
    label = <TimeUnit<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> hours_date>;
    tooltip = "[47]&#010;TimeUnit {{\as\:\hours_date\,\field\:\date\,\timeUnit\:{\unit\:\hours\}}:{as:hours_date,field:date,timeUnit:{unit:hours}}}"
  ]
  "48" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> hours_date, order>;
    tooltip = "[52]&#010;Facet r:{fields:[hours_date],name:row_domain,sortField:{field:order}}"
  ]
  "53" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[53]&#010;Identifier"
  ]
  "54" [
    label = <Output<br/><i>child_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[54]&#010;Output 55"
  ]
  "56" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "50" "50" -> "52" "52" -> "53" "53" -> "54" "54" -> "56"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/seattle-temps.csv</i>>;
    tooltip = "[43]&#010;data/seattle-temps.csv"
  ]
  "45" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> order>;
    tooltip = "[45]&#010;Calculate {as:order,calculate:(hours(datum.date) + 18) % 24}"
  ]
  "46" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> date>;
    tooltip = "[46]&#010;Parse {date:date}"
  ]
  "47" [
    label = <TimeUnit<br/><font color="grey" point-size="10">IN:</font> date<br/><font color="grey" point-size="10">OUT:</font> hours_date>;
    tooltip = "[47]&#010;TimeUnit {{\as\:\hours_date\,\field\:\date\,\timeUnit\:{\unit\:\hours\}}:{as:hours_date,field:date,timeUnit:{unit:hours}}}"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Facet<br/><font color="grey" point-size="10">IN:</font> hours_date, order>;
    tooltip = "[52]&#010;Facet r:{fields:[hours_date],name:row_domain,sortField:{field:order}}"
  ]
  "56" [
    label = <Output<br/><i>child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "59" [
    label = <Output<br/><i>clone_child_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[59]&#010;Output 58"
  ]

  "43" -> "46" "46" -> "45" "45" -> "47" "47" -> "50" "50" -> "59" "59" -> "52" "52" -> "56"
}
{ data: 'scale_child_main', field: 'date' }
{ data: 'scale_child_main', field: 'temp' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Average temperatures in Seattle, broken down by hour. Derived from [Seattle Annual Temperate](https://vega.github.io/vega/examples/annual-temperature/) example from the Vega example gallery.",
  "background": "white",
  "padding": 5,
  "title": {"text": "Seattle Annual Temperatures", "anchor": "start"},
  "data": [
    {
      "name": "source_0",
      "url": "data/seattle-temps.csv",
      "format": {"type": "csv", "parse": {"date": "date"}},
      "transform": [
        {
          "type": "formula",
          "expr": "(hours(datum.date) + 18) % 24",
          "as": "order"
        },
        {
          "field": "date",
          "type": "timeunit",
          "units": ["hours"],
          "as": ["hours_date", "hours_date_end"]
        }
      ]
    },
    {
      "name": "row_domain",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["hours_date"],
          "fields": ["order"],
          "ops": ["min"],
          "as": ["order"]
        }
      ]
    }
  ],
  "signals": [
    {"name": "child_width", "value": 800},
    {"name": "child_height", "value": 25}
  ],
  "layout": {
    "padding": {"row": 1, "column": 20},
    "offset": {"rowTitle": 10},
    "columns": 1,
    "bounds": "full",
    "align": "all"
  },
  "marks": [
    {
      "name": "row-title",
      "type": "group",
      "role": "row-title",
      "title": {
        "text": "date (hours)",
        "orient": "left",
        "style": "guide-title",
        "offset": -4
      }
    },
    {
      "name": "row_header",
      "type": "group",
      "role": "row-header",
      "from": {"data": "row_domain"},
      "sort": {"field": "datum[\"order\"]", "order": "ascending"},
      "title": {
        "text": {
          "signal": "hours(parent[\"hours_date\"]) == 0 ? 'Midnight' : hours(parent[\"hours_date\"]) == 12 ? 'Noon' : timeFormat(parent[\"hours_date\"], '%I:%M %p')"
        },
        "orient": "left",
        "style": "guide-label",
        "frame": "group",
        "baseline": "middle",
        "align": "left",
        "angle": 0,
        "offset": 2
      },
      "encode": {"update": {"height": {"signal": "child_height"}}},
      "axes": [
        {
          "scale": "y",
          "orient": "left",
          "grid": false,
          "labels": false,
          "ticks": false,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_height/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "column_footer",
      "type": "group",
      "role": "column-footer",
      "encode": {"update": {"width": {"signal": "child_width"}}},
      "axes": [
        {
          "scale": "x",
          "orient": "bottom",
          "grid": false,
          "title": "Month",
          "format": "%b",
          "labelFlush": true,
          "labelOverlap": true,
          "tickCount": {"signal": "ceil(child_width/40)"},
          "zindex": 0
        }
      ]
    },
    {
      "name": "cell",
      "type": "group",
      "style": "cell",
      "from": {
        "facet": {
          "name": "facet",
          "data": "source_0",
          "groupby": ["hours_date"],
          "aggregate": {
            "fields": ["order"],
            "ops": ["min"],
            "as": ["order_by_hours_date"]
          }
        }
      },
      "sort": {
        "field": ["datum[\"order_by_hours_date\"]"],
        "order": ["ascending"]
      },
      "encode": {
        "update": {
          "width": {"signal": "child_width"},
          "height": {"signal": "child_height"},
          "stroke": {"value": null}
        }
      },
      "marks": [
        {
          "name": "child_marks",
          "type": "area",
          "style": ["area"],
          "sort": {"field": "datum[\"date\"]"},
          "from": {"data": "facet"},
          "encode": {
            "update": {
              "orient": {"value": "vertical"},
              "fill": {"value": "#4c78a8"},
              "x": {"scale": "x", "field": "date"},
              "y": {"scale": "y", "field": "temp"},
              "y2": {"field": {"group": "height"}},
              "defined": {
                "signal": "isValid(datum[\"date\"]) && isFinite(+datum[\"date\"]) && isValid(datum[\"temp\"]) && isFinite(+datum[\"temp\"])"
              }
            }
          }
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "time",
      "domain": {"data": "source_0", "field": "date"},
      "range": [0, {"signal": "child_width"}]
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "temp"},
      "range": [{"signal": "child_height"}, 0],
      "zero": false,
      "nice": true
    }
  ],
  "config": {"axis": {"grid": false, "domain": false}}
}
