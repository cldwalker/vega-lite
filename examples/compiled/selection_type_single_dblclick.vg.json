digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[45]&#010;Output 46"
  ]
  "47" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Cylinders, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[47]&#010;Aggregate {dimensions:Set(\Origin\,\Cylinders\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "48" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[48]&#010;Identifier"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]
  "51" [
    label = <Filter>;
    tooltip = "[51]&#010;Filter !(length(data(pts_store))) || (vlSelectionTest(pts_store, datum))"
  ]
  "52" [
    label = <Output<br/><i>lookup_pts</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[52]&#010;Output 53"
  ]

  "43" -> "44" "44" -> "45" "45" -> "47" "47" -> "48" "48" -> "49" "49" -> "51" "51" -> "52"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/cars.json</i>>;
    tooltip = "[43]&#010;data/cars.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "47" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Origin, Cylinders, *<br/><font color="grey" point-size="10">OUT:</font> __count>;
    tooltip = "[47]&#010;Aggregate {dimensions:Set(\Origin\,\Cylinders\),measures:{*:{count:Set(\__count\)}}}"
  ]
  "48" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[48]&#010;Identifier"
  ]
  "49" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[49]&#010;Output 50"
  ]

  "43" -> "44" "44" -> "47" "47" -> "48" "48" -> "49"
}
{ data: 'main', field: 'Cylinders', sort: true }
{ data: 'main', field: 'Origin', sort: true }
{ data: 'main', field: '__count' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "style": "cell",
  "data": [
    {"name": "pts_store"},
    {
      "name": "source_0",
      "url": "data/cars.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "identifier", "as": "_vgsid_"},
        {
          "type": "aggregate",
          "groupby": ["Origin", "Cylinders"],
          "ops": ["count"],
          "fields": [null],
          "as": ["__count"]
        },
        {"type": "identifier", "as": "_vgsid_"}
      ]
    }
  ],
  "signals": [
    {"name": "x_step", "value": 20},
    {"name": "width", "update": "bandspace(domain('x').length, 0, 0) * x_step"},
    {"name": "y_step", "value": 20},
    {
      "name": "height",
      "update": "bandspace(domain('y').length, 0, 0) * y_step"
    },
    {
      "name": "unit",
      "value": {},
      "on": [
        {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
      ]
    },
    {"name": "pts", "update": "vlSelectionResolve(\"pts_store\", \"union\")"},
    {
      "name": "pts_tuple",
      "on": [
        {
          "events": [{"source": "scope", "type": "dblclick"}],
          "update": "datum && item().mark.marktype !== 'group' ? {unit: \"\", fields: pts_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
          "force": true
        },
        {"events": [{"source": "scope", "type": "dblclick"}], "update": "null"}
      ]
    },
    {"name": "pts_tuple_fields", "value": [{"type": "E", "field": "_vgsid_"}]},
    {
      "name": "pts_modify",
      "on": [
        {
          "events": {"signal": "pts_tuple"},
          "update": "modify(\"pts_store\", pts_tuple, true)"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "rect",
      "style": ["rect"],
      "interactive": true,
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "fill": [
            {
              "test": "!(length(data(\"pts_store\"))) || (vlSelectionTest(\"pts_store\", datum))",
              "scale": "color",
              "field": "__count"
            },
            {"value": "grey"}
          ],
          "x": {"scale": "x", "field": "Cylinders"},
          "width": {"scale": "x", "band": 1},
          "y": {"scale": "y", "field": "Origin"},
          "height": {"scale": "y", "band": 1}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "band",
      "domain": {"data": "source_0", "field": "Cylinders", "sort": true},
      "range": {"step": {"signal": "x_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "y",
      "type": "band",
      "domain": {"data": "source_0", "field": "Origin", "sort": true},
      "range": {"step": {"signal": "y_step"}},
      "paddingInner": 0,
      "paddingOuter": 0
    },
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "source_0", "field": "__count"},
      "range": "heatmap",
      "interpolate": "hcl",
      "zero": false
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "Cylinders",
      "labelAlign": "right",
      "labelAngle": 270,
      "labelBaseline": "middle",
      "labelOverlap": true,
      "zindex": 1
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Origin",
      "labelOverlap": true,
      "zindex": 1
    }
  ],
  "legends": [
    {
      "fill": "color",
      "gradientLength": {"signal": "clamp(height, 64, 200)"},
      "symbolType": "square",
      "title": "Count of Records"
    }
  ]
}
