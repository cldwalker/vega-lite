digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Director, Worldwide_Gross<br/><font color="grey" point-size="10">OUT:</font> aggregate_gross>;
    tooltip = "[45]&#010;Aggregate {dimensions:Set(\Director\),measures:{Worldwide_Gross:{mean:Set(\aggregate_gross\)}}}"
  ]
  "46" [
    label = <WindowTransform<br/><font color="grey" point-size="10">IN:</font> aggregate_gross<br/><font color="grey" point-size="10">OUT:</font> rank>;
    tooltip = "[46]&#010;WindowTransform {sort:[{field:aggregate_gross,order:descending}],window:[{as:rank,op:row_number}]}"
  ]
  "47" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> rank, Director<br/><font color="grey" point-size="10">OUT:</font> ranked_director>;
    tooltip = "[47]&#010;Calculate {as:ranked_director,calculate:datum.rank < 10 ? datum.Director : 'All Others'}"
  ]
  "48" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> ranked_director, aggregate_gross<br/><font color="grey" point-size="10">OUT:</font> mean_aggregate_gross>;
    tooltip = "[50]&#010;Aggregate {dimensions:Set(\ranked_director\),measures:{aggregate_gross:{mean:Set(\mean_aggregate_gross\)}}}"
  ]
  "51" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> aggregate_gross>;
    tooltip = "[51]&#010;FilterInvalid {aggregate_gross:{aggregate:mean,field:aggregate_gross,title:null,type:quantitative}}"
  ]
  "52" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[52]&#010;Output 53"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "50" "50" -> "51" "51" -> "52"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "45" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> Director, Worldwide_Gross<br/><font color="grey" point-size="10">OUT:</font> aggregate_gross>;
    tooltip = "[45]&#010;Aggregate {dimensions:Set(\Director\),measures:{Worldwide_Gross:{mean:Set(\aggregate_gross\)}}}"
  ]
  "46" [
    label = <WindowTransform<br/><font color="grey" point-size="10">IN:</font> aggregate_gross<br/><font color="grey" point-size="10">OUT:</font> rank>;
    tooltip = "[46]&#010;WindowTransform {sort:[{field:aggregate_gross,order:descending}],window:[{as:rank,op:row_number}]}"
  ]
  "47" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> rank, Director<br/><font color="grey" point-size="10">OUT:</font> ranked_director>;
    tooltip = "[47]&#010;Calculate {as:ranked_director,calculate:datum.rank < 10 ? datum.Director : 'All Others'}"
  ]
  "48" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> ranked_director, aggregate_gross<br/><font color="grey" point-size="10">OUT:</font> mean_aggregate_gross>;
    tooltip = "[50]&#010;Aggregate {dimensions:Set(\ranked_director\),measures:{aggregate_gross:{mean:Set(\mean_aggregate_gross\)}}}"
  ]
  "51" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> aggregate_gross>;
    tooltip = "[51]&#010;FilterInvalid {aggregate_gross:{aggregate:mean,field:aggregate_gross,title:null,type:quantitative}}"
  ]
  "52" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[52]&#010;Output 53"
  ]

  "43" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "50" "50" -> "51" "51" -> "52"
}
{ data: 'main', field: 'mean_aggregate_gross' }
{
  data: 'raw',
  field: 'ranked_director',
  sort: { op: 'mean', field: 'aggregate_gross', order: 'descending' }
}
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "Top-K plot with \"others\" by Trevor Manz, adapted from https://observablehq.com/@manzt/top-k-plot-with-others-vega-lite-example.",
  "background": "white",
  "padding": 5,
  "width": 200,
  "title": {
    "text": "Top Directors by Average Worldwide Gross",
    "frame": "group"
  },
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/movies.json",
      "format": {"type": "json"},
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["Director"],
          "ops": ["mean"],
          "fields": ["Worldwide_Gross"],
          "as": ["aggregate_gross"]
        },
        {
          "type": "window",
          "params": [null],
          "as": ["rank"],
          "ops": ["row_number"],
          "fields": [null],
          "sort": {"field": ["aggregate_gross"], "order": ["descending"]}
        },
        {
          "type": "formula",
          "expr": "datum.rank < 10 ? datum.Director : 'All Others'",
          "as": "ranked_director"
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["ranked_director"],
          "ops": ["mean"],
          "fields": ["aggregate_gross"],
          "as": ["mean_aggregate_gross"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"mean_aggregate_gross\"]) && isFinite(+datum[\"mean_aggregate_gross\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "y_step", "value": 20},
    {
      "name": "height",
      "update": "bandspace(domain('y').length, 0.1, 0.05) * y_step"
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "rect",
      "style": ["bar"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "fill": {"value": "#4c78a8"},
          "x": {"scale": "x", "field": "mean_aggregate_gross"},
          "x2": {"scale": "x", "value": 0},
          "y": {"scale": "y", "field": "ranked_director"},
          "height": {"scale": "y", "band": 1}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {"data": "data_0", "field": "mean_aggregate_gross"},
      "range": [0, {"signal": "width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "y",
      "type": "band",
      "domain": {
        "data": "source_0",
        "field": "ranked_director",
        "sort": {
          "op": "mean",
          "field": "aggregate_gross",
          "order": "descending"
        }
      },
      "range": {"step": {"signal": "y_step"}},
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "labelOverlap": true,
      "zindex": 0
    }
  ]
}
