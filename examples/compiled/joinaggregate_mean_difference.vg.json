digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[45]&#010;Filter datum.IMDB_Rating != null"
  ]
  "46" [
    label = <JoinAggregateTransform<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> AverageRating>;
    tooltip = "[46]&#010;JoinAggregateTransform {joinaggregate:[{as:AverageRating,field:IMDB_Rating,op:mean}]}"
  ]
  "47" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, AverageRating>;
    tooltip = "[47]&#010;Filter (datum.IMDB_Rating - datum.AverageRating) > 2.5"
  ]
  "48" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[48]&#010;Output 49"
  ]
  "50" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[52]&#010;Identifier"
  ]
  "53" [
    label = <Output<br/><i>layer_0_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[53]&#010;Output 54"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[55]&#010;FilterInvalid {IMDB_Rating:{axis:{title:IMDB Rating},field:IMDB_Rating,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "58" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[58]&#010;Identifier"
  ]
  "59" [
    label = <Output<br/><i>layer_1_raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[59]&#010;Output 60"
  ]
  "61" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> AverageRating<br/><font color="grey" point-size="10">OUT:</font> average_AverageRating>;
    tooltip = "[61]&#010;Aggregate {dimensions:Set(),measures:{AverageRating:{average:Set(\average_AverageRating\)}}}"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> AverageRating>;
    tooltip = "[62]&#010;FilterInvalid {AverageRating:{aggregate:average,field:AverageRating,type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "50" "50" -> "52" "52" -> "53" "53" -> "55" "55" -> "56" "50" -> "58" "58" -> "59" "59" -> "61" "61" -> "62" "62" -> "63"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[45]&#010;Filter datum.IMDB_Rating != null"
  ]
  "46" [
    label = <JoinAggregateTransform<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> AverageRating>;
    tooltip = "[46]&#010;JoinAggregateTransform {joinaggregate:[{as:AverageRating,field:IMDB_Rating,op:mean}]}"
  ]
  "47" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, AverageRating>;
    tooltip = "[47]&#010;Filter (datum.IMDB_Rating - datum.AverageRating) > 2.5"
  ]
  "55" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[55]&#010;FilterInvalid {IMDB_Rating:{axis:{title:IMDB Rating},field:IMDB_Rating,type:quantitative}}"
  ]
  "56" [
    label = <Output<br/><i>layer_0_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[56]&#010;Output 57"
  ]
  "61" [
    label = <Aggregate<br/><font color="grey" point-size="10">IN:</font> AverageRating<br/><font color="grey" point-size="10">OUT:</font> average_AverageRating>;
    tooltip = "[61]&#010;Aggregate {dimensions:Set(),measures:{AverageRating:{average:Set(\average_AverageRating\)}}}"
  ]
  "62" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> AverageRating>;
    tooltip = "[62]&#010;FilterInvalid {AverageRating:{aggregate:average,field:AverageRating,type:quantitative}}"
  ]
  "63" [
    label = <Output<br/><i>layer_1_main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[63]&#010;Output 64"
  ]

  "43" -> "45" "45" -> "46" "46" -> "47" "47" -> "55" "55" -> "56" "47" -> "61" "61" -> "62" "62" -> "63"
}
{ data: 'layer_0_main', field: 'IMDB_Rating' }
{ data: 'layer_1_main', field: 'average_AverageRating' }
{ data: 'layer_0_main', field: 'Title', sort: true }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "background": "white",
  "padding": 5,
  "width": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/movies.json",
      "format": {"type": "json"},
      "transform": [
        {"type": "filter", "expr": "datum.IMDB_Rating != null"},
        {
          "type": "joinaggregate",
          "as": ["AverageRating"],
          "ops": ["mean"],
          "fields": ["IMDB_Rating"]
        },
        {
          "type": "filter",
          "expr": "(datum.IMDB_Rating - datum.AverageRating) > 2.5"
        }
      ]
    },
    {
      "name": "data_0",
      "source": "source_0",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(datum[\"IMDB_Rating\"]) && isFinite(+datum[\"IMDB_Rating\"])"
        }
      ]
    },
    {
      "name": "data_1",
      "source": "source_0",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [],
          "ops": ["average"],
          "fields": ["AverageRating"],
          "as": ["average_AverageRating"]
        },
        {
          "type": "filter",
          "expr": "isValid(datum[\"average_AverageRating\"]) && isFinite(+datum[\"average_AverageRating\"])"
        }
      ]
    }
  ],
  "signals": [
    {"name": "y_step", "value": 20},
    {
      "name": "height",
      "update": "bandspace(domain('y').length, 0.1, 0.05) * y_step"
    }
  ],
  "marks": [
    {
      "name": "layer_0_marks",
      "type": "rect",
      "style": ["bar"],
      "from": {"data": "data_0"},
      "encode": {
        "update": {
          "fill": {"value": "#4c78a8"},
          "x": {"scale": "x", "field": "IMDB_Rating"},
          "x2": {"scale": "x", "value": 0},
          "y": {"scale": "y", "field": "Title"},
          "height": {"scale": "y", "band": 1}
        }
      }
    },
    {
      "name": "layer_1_marks",
      "type": "rule",
      "style": ["rule"],
      "from": {"data": "data_1"},
      "encode": {
        "update": {
          "stroke": {"value": "red"},
          "x": {"scale": "x", "field": "average_AverageRating"},
          "y": {"value": 0},
          "y2": {"field": {"group": "height"}}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "linear",
      "domain": {
        "fields": [
          {"data": "data_0", "field": "IMDB_Rating"},
          {"data": "data_1", "field": "average_AverageRating"}
        ]
      },
      "range": [0, {"signal": "width"}],
      "nice": true,
      "zero": true
    },
    {
      "name": "y",
      "type": "band",
      "domain": {"data": "data_0", "field": "Title", "sort": true},
      "range": {"step": {"signal": "y_step"}},
      "paddingInner": 0.1,
      "paddingOuter": 0.05
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "IMDB Rating",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Title",
      "labelOverlap": true,
      "zindex": 0
    }
  ]
}
