digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "44" [
    label = <Identifier<br/><font color="grey" point-size="10">OUT:</font> _vgsid_>;
    tooltip = "[44]&#010;Identifier"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[45]&#010;Filter datum.IMDB_Rating != null"
  ]
  "46" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> Release_Date<br/><font color="grey" point-size="10">OUT:</font> Release_Date>;
    tooltip = "[46]&#010;Parse {Release_Date:date}"
  ]
  "47" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> Release_Date>;
    tooltip = "[47]&#010;Filter time(datetime(year(datum[Release_Date]), 0, 1, 0, 0, 0, 0)) <= time(datetime(2019, 0, 1, 0, 0, 0, 0))"
  ]
  "48" [
    label = <JoinAggregateTransform<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> AverageRating>;
    tooltip = "[48]&#010;JoinAggregateTransform {joinaggregate:[{as:AverageRating,field:IMDB_Rating,op:mean}]}"
  ]
  "49" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, AverageRating<br/><font color="grey" point-size="10">OUT:</font> RatingDelta>;
    tooltip = "[49]&#010;Calculate {as:RatingDelta,calculate:datum.IMDB_Rating - datum.AverageRating}"
  ]
  "50" [
    label = <Output<br/><i>raw</i><br/><font color="grey" point-size="10">required:</font> false>;
    tooltip = "[50]&#010;Output 51"
  ]
  "52" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Release_Date, RatingDelta>;
    tooltip = "[52]&#010;FilterInvalid {RatingDelta:{field:RatingDelta,scale:{domainMid:0},title:Rating Delta,type:quantitative},Release_Date:{field:Release_Date,type:temporal}}"
  ]
  "53" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]

  "43" -> "44" "44" -> "45" "45" -> "46" "46" -> "47" "47" -> "48" "48" -> "49" "49" -> "50" "50" -> "52" "52" -> "53"
}
digraph DataFlow {
  rankdir = TB;
  node [shape=record]
    "43" [
    label = <Source<br/><i>data/movies.json</i>>;
    tooltip = "[43]&#010;data/movies.json"
  ]
  "45" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating>;
    tooltip = "[45]&#010;Filter datum.IMDB_Rating != null"
  ]
  "46" [
    label = <Parse<br/><font color="grey" point-size="10">IN:</font> Release_Date<br/><font color="grey" point-size="10">OUT:</font> Release_Date>;
    tooltip = "[46]&#010;Parse {Release_Date:date}"
  ]
  "47" [
    label = <Filter<br/><font color="grey" point-size="10">IN:</font> Release_Date>;
    tooltip = "[47]&#010;Filter time(datetime(year(datum[Release_Date]), 0, 1, 0, 0, 0, 0)) <= time(datetime(2019, 0, 1, 0, 0, 0, 0))"
  ]
  "48" [
    label = <JoinAggregateTransform<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating<br/><font color="grey" point-size="10">OUT:</font> AverageRating>;
    tooltip = "[48]&#010;JoinAggregateTransform {joinaggregate:[{as:AverageRating,field:IMDB_Rating,op:mean}]}"
  ]
  "49" [
    label = <Calculate<br/><font color="grey" point-size="10">IN:</font> IMDB_Rating, AverageRating<br/><font color="grey" point-size="10">OUT:</font> RatingDelta>;
    tooltip = "[49]&#010;Calculate {as:RatingDelta,calculate:datum.IMDB_Rating - datum.AverageRating}"
  ]
  "52" [
    label = <FilterInvalid<br/><font color="grey" point-size="10">IN:</font> Release_Date, RatingDelta>;
    tooltip = "[52]&#010;FilterInvalid {RatingDelta:{field:RatingDelta,scale:{domainMid:0},title:Rating Delta,type:quantitative},Release_Date:{field:Release_Date,type:temporal}}"
  ]
  "53" [
    label = <Output<br/><i>main</i><br/><font color="grey" point-size="10">required:</font> true>;
    tooltip = "[53]&#010;Output 54"
  ]

  "43" -> "46" "46" -> "45" "45" -> "47" "47" -> "48" "48" -> "49" "49" -> "52" "52" -> "53"
}
{ data: 'main', field: 'Release_Date' }
{ data: 'main', field: 'RatingDelta' }
{ data: 'main', field: 'RatingDelta' }
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "background": "white",
  "padding": 5,
  "width": 200,
  "height": 200,
  "style": "cell",
  "data": [
    {
      "name": "source_0",
      "url": "data/movies.json",
      "format": {"type": "json", "parse": {"Release_Date": "date"}},
      "transform": [
        {"type": "filter", "expr": "datum.IMDB_Rating != null"},
        {
          "type": "filter",
          "expr": "time(datetime(year(datum[\"Release_Date\"]), 0, 1, 0, 0, 0, 0)) <= time(datetime(2019, 0, 1, 0, 0, 0, 0))"
        },
        {
          "type": "joinaggregate",
          "as": ["AverageRating"],
          "ops": ["mean"],
          "fields": ["IMDB_Rating"]
        },
        {
          "type": "formula",
          "expr": "datum.IMDB_Rating - datum.AverageRating",
          "as": "RatingDelta"
        },
        {
          "type": "filter",
          "expr": "(isDate(datum[\"Release_Date\"]) || (isValid(datum[\"Release_Date\"]) && isFinite(+datum[\"Release_Date\"]))) && isValid(datum[\"RatingDelta\"]) && isFinite(+datum[\"RatingDelta\"])"
        }
      ]
    }
  ],
  "marks": [
    {
      "name": "marks",
      "type": "symbol",
      "style": ["point"],
      "from": {"data": "source_0"},
      "encode": {
        "update": {
          "opacity": {"value": 0.7},
          "fill": {"value": "transparent"},
          "stroke": {"scale": "color", "field": "RatingDelta"},
          "x": {"scale": "x", "field": "Release_Date"},
          "y": {"scale": "y", "field": "RatingDelta"}
        }
      }
    }
  ],
  "scales": [
    {
      "name": "x",
      "type": "time",
      "domain": {"data": "source_0", "field": "Release_Date"},
      "range": [0, {"signal": "width"}]
    },
    {
      "name": "y",
      "type": "linear",
      "domain": {"data": "source_0", "field": "RatingDelta"},
      "range": [{"signal": "height"}, 0],
      "nice": true,
      "zero": true
    },
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "source_0", "field": "RatingDelta"},
      "range": "diverging",
      "domainMid": 0,
      "interpolate": "hcl",
      "zero": false
    }
  ],
  "axes": [
    {
      "scale": "x",
      "orient": "bottom",
      "gridScale": "y",
      "grid": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "gridScale": "x",
      "grid": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "domain": false,
      "labels": false,
      "maxExtent": 0,
      "minExtent": 0,
      "ticks": false,
      "zindex": 0
    },
    {
      "scale": "x",
      "orient": "bottom",
      "grid": false,
      "title": "Release_Date",
      "labelFlush": true,
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(width/40)"},
      "zindex": 0
    },
    {
      "scale": "y",
      "orient": "left",
      "grid": false,
      "title": "Rating Delta",
      "labelOverlap": true,
      "tickCount": {"signal": "ceil(height/40)"},
      "zindex": 0
    }
  ],
  "legends": [
    {
      "title": "Rating Delta",
      "stroke": "color",
      "gradientLength": {"signal": "clamp(height, 64, 200)"},
      "symbolType": "circle",
      "encode": {"gradient": {"update": {"opacity": {"value": 0.7}}}}
    }
  ]
}
